Хабрβ Открыть список Как стать автором Моя лентаВсе потокиРазработкаАдминистрированиеДизайнМенеджментМаркетингНаучпоп Поиск Написать публикацию Настройки Войти Обновить 1.58 Рейтинг Подписаться Haskell * Чистый функциональный язык программирования СтатьиПостыНовостиАвторыКомпании Все подряд Открыть список Скопировать ссылку на RSS Сначала показывать Новые Лучшие Порог рейтинга Все ≥0 ≥10 ≥25 ≥50 ≥100 Уровень сложности Все Простой Средний СложныйПрименить Quintanar 13 мар в 11:30 Алгебраические эффекты на Javascript Уровень сложностиСложный Время на прочтение14 мин Количество просмотров 1.7K Программирование*Ненормальное программирование*JavaScript*Haskell* В этой статье я хотел рассказать об интересном подходе к построению программ, описанному в книге Sandy Maguire, Algebra-Driven Design. Подход позволяет строить программы на основе абстрактных математических структур и законов. Это позволяет разработать обобщенные подходы к их созданию и тестированию. Но потом я понял, что в этом мало смысла без объяснения, почему такой подход в принципе имеет право на существование. В книге для примеров используется Haskell - ленивый, чистый функциональный язык, имеющий крайне мало отношения к языкам, которые широко применяются на практике. Распространено мнение, что приемы, используемые в Haskell, существуют в основном для преодоления его же недостатков и в других языках не нужны. Например, про монады пишут, что это оторванная от реальной жизни абстракция, которую не встретить в повседневной работе. Нет ничего более далекого от истины. Монады - это не костыль, а мощная абстракция, которая позволяет выявить связь между такими непохожими языками, как C и Haskell, и свести к одному знаменателю такие далекие друг от друга концепции как асинхронные функции и глобальные переменные. Так что в этой статье я ограничусь описанием алгебраического программирования на примере монады. Я по шагам пройду путь от классической, сравнительно бесполезной в динамически типизированных языках монады, до Freer монады, которая обладает настолько удивительными свойствами, что может найти применение даже в императивном языке. Вы убедитесь, что алгебраический подход применим в обычных языках и дает превосходные результаты. Читать далее Всего голосов 9: ↑7 и ↓2 +5 Добавить в закладки20 Комментарии 11 Новости все подрядлучшие Все новости iokasimov 2 фев в 08:34 Я: экстремально композиционный язык программирования Уровень сложностиСредний Время на прочтение3 мин Количество просмотров 12K Haskell*Функциональное программирование*Математика* Туториал Честно говоря, я не планировал создавать свой язык, это случилось само собой. Ещё со времен моего знакомства с программированием, больше всего меня волновала именно сложность, присущая любой предметной области и способы борьбы с оной. Чтобы найти такие ответы, которыми смогут воспользоваться и другие люди, я потратил около 10 лет. Читать далее Всего голосов 46: ↑43 и ↓3 +55 Добавить в закладки41 Комментарии 105 RevezRep 17 дек 2024 в 09:15 Функциональное программирование и программирование на Haskell Уровень сложностиПростой Время на прочтение16 мин Количество просмотров 2.6K Haskell*Функциональное программирование* Из песочницы Концепция функционального программирования (ФП) базируется на математических функциях. Такой подход принципиально отличается от императивного, в котором ключевыми элементами выступают изменения состояния кода и последовательное выполнение команд. В ФП основное внимание уделено вычислению тех или иных значений через функции. В функциональных языках код проще тестировать, корректировать и поддерживать в рабочем состоянии. Функции в ФП — это объекты первого класса, которые передаются как аргументы, могут быть возвращены из других функций и храниться в переменных. Еще одна характерная особенность функционального программирования — более предсказуемый, чистый и безопасный код. Поскольку функции сами по себе не меняют состояния программы, с ними легче работать. По этой причине ФП — более предпочтительный инструмент для создания сложных продуктов, в которых первостепенное значение имеют надежность и предсказуемость кода. Haskell входит в число наиболее востребованных функциональных языков программирования. Для него характерна полная, строгая и статическая типизация и поддержка так называемых «ленивых» вычислений. Первоначально язык применялся в качестве инструмента для сугубо научных математических изысканий, но постепенно стал одним из наиболее востребованных на практике языков. Читать далее Всего голосов 6: ↑3 и ↓3 0 Добавить в закладки12 Комментарии 14 ru_vds 23 окт 2024 в 16:01 На самом деле, ООП — это не так уж плохо Уровень сложностиСредний Время на прочтение10 мин Количество просмотров 13K Блог компании RUVDS.comHaskell*ООП*Программирование*Функциональное программирование* Обзор Перевод ООП — определённо не самая моя любимая парадигма, но я считаю, что в мейнстримном ООП со статической типизацией кое-что сделано правильно, и это очень важно для программирования. В этом посте я хочу рассказать, что же самое важное реализовано в мейнстримных ООП-языках со статической типизацией. Затем я сравню ООП-код с Haskell, чтобы показать, что ООП не так плох во всём, как, похоже, считают поклонники функционального программирования. Читать дальше → Всего голосов 33: ↑26 и ↓7 +34 Добавить в закладки101 Комментарии 158 Истории MrPizzly 30 сен 2024 в 20:26 Планируем потоки как Томас Джефферсон Время на прочтение10 мин Количество просмотров 2K Блог компании BegetПрограммирование*Haskell* Перевод Эта статья посвящена тому, как распределять задачи между конвейерами очередей, чтобы минимизировать общее время обработки, а также неожиданной связи между этим методом планирования и методом Томаса Джефферсона. Читать далее Всего голосов 6: ↑6 и ↓0 +9 Добавить в закладки20 Комментарии 0 GospodinKolhoznik 5 мая 2024 в 14:25 Restricted IO в Haskell Уровень сложностиСредний Время на прочтение8 мин Количество просмотров 1.7K Haskell*Функциональное программирование* В статье описывается механизм создания собственного модифицированного варианта монады IO в Haskell, с ограничениями операций ввода-вывода. Хорошим тоном организации структуры любой программы на Haskell считается разделение кода на блоки, выполняющие IO операции ввода-вывода и блоки, полностью состоящие из чистых функций, т.е. функций, не выполняющих IO операций, а лишь принимающие на вход некоторые данные и возвращающие их в преобразованном виде. Такого рода чистые блоки по сути представляют из себя функции в математическом смысле слова, принимающие аргумент и возвращающие значение функции, и напоминают программы зари компьютерной эры, когда данные с перфокарт загружались в программу в самом начале её работы, после чего некоторое время обрабатывались, и по итогу работы программы выводила на печать итоговый результат расчётов, при этом в ходе работы программы не предполагалось никакого интерактивного взаимодействия с ней. Чтобы добавить в программу интерактивность, но при этом максимально сохранить математическую целостность функций, применяется примерно такой подход: Читать далее Всего голосов 13: ↑12 и ↓1 +17 Добавить в закладки14 Комментарии 4 orenty7 17 апр 2024 в 10:30 Разбор монады ContT, или как написать продвинутый goto, генераторы и файберы на хаскеле Уровень сложностиСложный Время на прочтение7 мин Количество просмотров 1.7K Haskell*Функциональное программирование* Туториал В этой статье я разберу монаду ContT, и покажу как вернуть return и другие control-flow операторы из императивных языков программирования, которых мне так нехватало, когда я начинал изучать хаскель. Читать далее Всего голосов 11: ↑10 и ↓1 +10 Добавить в закладки14 Комментарии 2 mojojojo 17 апр 2024 в 09:25 Безопасный Continuous Deployment БД по принципам DB-First Уровень сложностиСредний Время на прочтение12 мин Количество просмотров 3.8K PostgreSQL*Java*Haskell*Администрирование баз данных*Системы сборки* Туториал В статье рассматривается Continuous Deployment для БД с бесшовными релизами за счёт обратно-совместимых обновлений и автоматизации проверок совместимости с помощью подхода DB-First. Читать далее Всего голосов 5: ↑5 и ↓0 +5 Добавить в закладки21 Комментарии 8 CorwinH 14 апр 2024 в 13:30 Постфиксный калькулятор на Haskell Уровень сложностиСредний Время на прочтение6 мин Количество просмотров 2K Haskell*Функциональное программирование* Можно ли внедрить в Haskell постфиксный калькулятор? begin push 1 push 2 add end begin push 1 push 2 push 3 add mul end На первый взгляд такой код на Haskell не может работать. Функция begin должна иметь произвольное количество аргументов, а Haskell является языком со статической типизацией. Но на самом деле, для написания вариативных (polyvariadic) функций достаточно полиморфизма. Читать далее Всего голосов 11: ↑11 и ↓0 +14 Добавить в закладки15 Комментарии 0 ru_vds 12 фев 2024 в 16:00 Как изучить Haskell всего за 15 лет Уровень сложностиСредний Время на прочтение9 мин Количество просмотров 15K Блог компании RUVDS.comHaskell*Учебный процесс в ITФункциональное программирование* Кейс Перевод Haskell — это язык программирования, изобретённый в 20-м веке шотландскими логиками в качестве пранка (вероятно). Примерно пятнадцать лет назад я начал изучать Haskell по причинам, которые уже и не упомню. Сегодня я наконец написал полезную программу на Haskell и уверен, что смогу сделать это снова, если мне когда-нибудь понадобится ещё одна компьютерная программа. Я не знаю, как изучал функциональное программирование в целом и Haskell в частности. В 2006-м я следил за проектами why the lucky stiff и читал передовой тамблелог Леа Нойкирхен Anarchaia, и какой-то из этих источников познакомил меня с миром за пределами ООП. В декабре 2006 года Леа опубликовала на Anarchaia ссылку на Pandoc, и тогда я впервые узнал о своём любимом ПО и языке, на котором оно было написано. Читать дальше → Всего голосов 43: ↑38 и ↓5 +52 Добавить в закладки51 Комментарии 9 samsergey 21 янв 2024 в 04:06 Из пушек по воробьям. Генерация и решение лабиринта не самым обычным способом Уровень сложностиСредний Время на прочтение19 мин Количество просмотров 5.4K Ненормальное программирование*Haskell* На уходящей неделе мне попалась симпатичная, хоть и не новая мини‑серия статей на Дзен‑канале @zdgzdgzdg про процедурную генерацию лабиринта методом «коллапса волновой функции». Пока я читал эти статьи и знакомился с кодом, меня осенило: ведь это же вычисления в комонаде, погружённые в монаду! Я не издеваюсь, действительно, речь идёт о композиции двух паттернов функционального программирования: комонады Zipper, превращающей локальные правила в глобальное состояние, и монады Random, позволяющей генерировать случайные объекты. И вот, в качестве баловства на выходных, я решил реализовать этот «квантовый» алгоритм генерации лабиринтов на Haskell, используя и комонады и монады, и вообще, ни в чëм себе не отказывая. И хотя язык программирования Haskell нужен не только для извращений, но именно для них он подходит идеально! Читать далее Всего голосов 38: ↑38 и ↓0 +38 Добавить в закладки58 Комментарии 7 CorwinH 10 янв 2024 в 17:31 О функциональном программировании на примере решения судоку Уровень сложностиСредний Время на прочтение10 мин Количество просмотров 8K Функциональное программирование*Haskell* Из песочницы Цель данной статьи - познакомить читателя с основными идеями функционального программирования на примере программы для решения судоку. Статья рассчитана на тех, кто не знаком с функциональным программированием, но хотел бы узнать, на что это похоже. Впрочем, опытные программисты могут сразу прокрутить в конец статьи и покритиковать итоговый код. Читать Всего голосов 13: ↑12 и ↓1 +19 Добавить в закладки65 Комментарии 26 mojojojo 19 дек 2023 в 10:54 Проектирование БД рекомендательной системы по подходу DB-first Уровень сложностиПростой Время на прочтение9 мин Количество просмотров 4.5K Haskell*Java*PostgreSQL* Туториал В данной статье мы рассмотрим проектирование системы по подходу DB-first и то, какие проблемы он помогает не просто решить, а устранить как явление. Читать далее Всего голосов 9: ↑7 и ↓2 +7 Добавить в закладки30 Комментарии 11 Ближайшие события 31 марта Серия вебинаров «DevOps Middle: AvitoTech vs ecom.tech» Онлайн Больше событий в календаре Разработка Администрирование 3 апреля Реалити для разработчиков: узнайте, как строится новое публичное облако MWS Онлайн Больше событий в календаре Разработка 3 апреля Открытая встреча «System Analysis Meetup SberHealth» Москва • Онлайн Больше событий в календаре Аналитика 4 – 5 апреля Геймтон «DatsCity» Онлайн Больше событий в календаре Разработка 8 апреля Конференция TEAMLY WORK MANAGEMENT 2025 Москва • Онлайн Больше событий в календаре Менеджмент Другое 10 апреля «GoCloud 2025» — масштабная IT-конференция про облака и AI Москва • Онлайн Больше событий в календаре Разработка Администрирование Менеджмент 15 – 16 апреля Форум «Российская неделя ЦОД»: конференции «В Облаке.РФ» и TechDay Москва • Онлайн Больше событий в календаре Разработка Менеджмент Другое 17 – 19 апреля Курс: «Клиентские данные в энтерпрайзе» Москва Больше событий в календаре Аналитика Тестирование Другое 25 – 26 апреля IT-конференция Merge Tatarstan 2025 Казань Больше событий в календаре Разработка Маркетинг Другое 25 апреля Кейс-конференция «Клиника на миллиард: лидеры делятся опытом построения клиник» Москва • Онлайн Больше событий в календаре Менеджмент Другое 20 – 22 июня Летняя айти-тусовка Summer Merge Ульяновская область Больше событий в календаре Разработка Другое Влево Вправо KirillBelovTest 13 ноя 2023 в 22:25 Что вы знаете о символьном программировании? Уровень сложностиСредний Время на прочтение15 мин Количество просмотров 18K Математика*Haskell*Lisp*Программирование*Ненормальное программирование* Мнение ✏️ Технотекст 2023 Кликбейтный заголовок, риторический вопрос и обещание раскрыть тайну! Не самый лучший набор, но нормального названия для статьи мне в голову не пришло. Что же здесь все таки будет? Речь пойдет о реализации символьного программирования в Wolfram Language (WL). Я не буду рассказывать про отличия от других парадигм. А также здесь точно не будет общих определений. Вместо этого я попытаюсь ответить на несколько вопросов исходя из своего личного опыта и наблюдений. Внимание! Я не математик и не знаю haskell и lisp! И буду рад если меня поправят настоящие математики, которые с ними знакомы. Читать далее Всего голосов 40: ↑40 и ↓0 +40 Добавить в закладки60 Комментарии 98 includedlibrary 14 окт 2023 в 16:56 Делаем crackme. Часть первая: whitebox AES Уровень сложностиСредний Время на прочтение34 мин Количество просмотров 3.4K Ненормальное программирование*Haskell*C* Эта статья первая из цикла, в котором мы будем создавать crackme для linux amd64. В crackme будут реализованы шифрование каждой функции отдельным ключём и наномиты для противодействия отладке. В данной статье мы рассмотрим алгоритм встраивания ключа шифрования в код для усложнения расшифровки функций пользователем. Если стало интересно, прошу под кат. Читать далее Всего голосов 8: ↑8 и ↓0 +8 Добавить в закладки34 Комментарии 0 mojojojo 5 окт 2023 в 08:59 Автоматизация разработки с помощью подхода DB-first Уровень сложностиПростой Время на прочтение5 мин Количество просмотров 5.4K PostgreSQL*Java*Haskell*Администрирование баз данных*Rust* Обзор Интеграция с БД - привычно сложная и хрупкая часть большинства кодобаз, постоянно отвлекающая внимание разработчиков и раздувающая сроки. Какой бы хайпующий фреймворк вы ни пробовали, вы неизбежно обнаруживаете себя борющимся с одними и теми же симптомами, но ощущение того, что проблема могла бы решаться проще не покидает вас. Знакомо? Оказывается, так вовсе не должно быть. В данном посте мы разберёмся в причинах и сформулируем подход, который оставляет большинство привычных проблем просто несуществующими. Читать далее Всего голосов 20: ↑5 и ↓15 -9 Добавить в закладки11 Комментарии 14 orenty7 2 июн 2023 в 20:47 Ломаем хаскелем Brainfuck Уровень сложностиСложный Время на прочтение28 мин Количество просмотров 10K Ненормальное программирование*Компиляторы*Haskell*Brainfuck* Немного о bfc Brainfuck — очень глупый язык. Там есть лента из 30к ячеек, по байту каждая. Команды bfc это: Передвижение по ленте влево и вправо (символы < и >) Увеличение и уменьшение значения в ячейке (символы + и -) Ввод и вывод текущей ячейки (символы . и ,) И цикл while, который продолжается пока значение в текущей ячейке не ноль. [ и ] это начало и конец цикла соответственно Программировать на bfc сложно. Но, как известно, любую проблему можно решить добавлением слоя абстракции (кроме проблемы большого количества абстракций). Читать дальше → Всего голосов 83: ↑83 и ↓0 +83 Добавить в закладки62 Комментарии 17 goosedb 9 янв 2023 в 17:51 Нет, в Haskell неудобно обрабатывать ошибки (если не пользоваться эффектами) Время на прочтение6 мин Количество просмотров 6.1K Haskell* Мнение Если вы когда-нибудь читали агитации, призывающие к изучению Haskell, наверняка вас убеждали, что в нём ну очень удобно обрабатывать ошибки, ведь там есть Монада Either. Но это неправда. В хаскельных школах не рассказывают, как удобно(?) обрабатывать ошибки. А я расскажу. Обработать ошибки без регистрации и СМС Всего голосов 29: ↑28 и ↓1 +37 Добавить в закладки30 Комментарии 19 itmo 21 дек 2022 в 15:35 Как выглядит стажировка в ИТМО Время на прочтение8 мин Количество просмотров 2.3K Блог компании ИТМОDevOps*Учебный процесс в ITHaskell*Программирование* Обсуждая IT-образование, представители компаний часто жалуются на отсутствие у вчерашних студентов навыков работы в команде и понимания, как в принципе функционирует бизнес в этой сфере. Но мы уверены ― многое зависит как от самого студента, так и среды, в которой он проводит время, учится. На некоторых факультетах ИТМО стажировка в магистратуре обязательна. После нее на рынок труда выходит готовый джун или мидл, зачастую с предложением о работе в той самой компании, где он стажировался. В этой статье мы покажем, как стажировка проходит на практике и что она приносит самим IT-компаниям. В фокусе истории двух магистрантов института прикладных компьютерных наук ИТМО ― Федора Золотухина и Андрея Стояна. Читать далее Всего голосов 10: ↑10 и ↓0 +10 Добавить в закладки14 Комментарии 0 DeniLarks 23 окт 2022 в 13:37 Пример использования State и StateT Время на прочтение4 мин Количество просмотров 3.4K Haskell* Туториал Из песочницы Мне встречалась фраза: "для многих знакомство с Haskell заканчивается на монадах". Монады действительно сложны для понимания, а самая непонятная, лично для меня, была монада State. На простом примере, я хочу показать всю полезность монады State и еще большую полезность трансформера StateT. Читать далее Всего голосов 12: ↑12 и ↓0 +12 Добавить в закладки10 Комментарии 4 Назад Сюда 1 23 ... 1213Туда Назад Ваш аккаунт Войти Регистрация Разделы Статьи Новости Хабы Компании Авторы Песочница Информация Устройство сайта Для авторов Для компаний Документы Соглашение Конфиденциальность Услуги Корпоративный блог Медийная реклама Нативные проекты Образовательные программы Стартапам Facebook Twitter VK Telegram Youtube Яндекс Дзен Настройка языкаТехническая поддержка © 2006–2025, Habr