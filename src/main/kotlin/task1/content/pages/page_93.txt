Хабр β Открыть список Как стать автором Моя лента Все потоки Разработка Администрирование Дизайн Менеджмент Маркетинг Научпоп Поиск Написать публикацию Настройки Войти Обновить 562.92 Рейтинг OTUS Цифровые навыки от ведущих экспертов Подписаться MaxRokatansky 13 часов назад DWH: История поиска альтернативы PostgreSQL и Snowflake. Часть 1 Уровень сложности Средний Время на прочтение 13 мин Количество просмотров 1.1K Блог компании OTUS Хранилища данных * Хранение данных * SQL * Big Data * Перевод Автор оригинала: Andrew Schetinin Snowflake, Timescale, Amazon Redshift, ClickHouse, Google Cloud BigQuery, Apache Druid, Apache Cassandra, Firebolt… Выбор подходящего облачного хранилища данных может оказаться довольно сложной задачей&nbsp;— доступных вариантов целое множество. И недавно мне довелось руководить масштабным внутренним исследованием, в&nbsp;рамках которого мы в&nbsp;Agritask сравнивали ведущие облачные хранилища данных. Мы хотели определить, какая платформа лучше всего подходит для&nbsp;выполнения сложных запросов над миллиардами записей с&nbsp;высоким уровнем параллелизма и низкой задержкой, обеспечивая при&nbsp;этом оптимальное соотношение цены и производительности. Процесс исследования включал тщательное тестирование на&nbsp;нескольких системах, чтобы выявить их сильные и слабые стороны, а&nbsp;также измерить контрольные показатели производительности. Учитывая глубину и масштаб наших выводов, я с&nbsp;радостью поделюсь ими, чтобы помочь вам, коллегам data‑инженерам, облегчить сложность выбора подходящего для&nbsp;ваших нужд хранилища. В&nbsp;этой статье я затрону: Юзкейс, под&nbsp;который мы подбирали хранилище Технические требования Оценку хранилищ данных: Snowflake, Timescale, Amazon Redshift, ClickHouse, Google Cloud BigQuery, Apache Druid, Apache Cassandra, Firebolt Результаты нашего исследования Сравнение вендоров Проблемы и извлеченные уроки Советы коллегам‑инженерам Юзкейс, под который мы подбирали хранилище Компания Agritask разработала инновационную SaaS‑платформу, которая обеспечивает наглядное представление о&nbsp;предсказуемости и устойчивости поставок сельскохозяйственных культур для&nbsp;предприятий пищевой промышленности и производства напитков. Используя дополненные агрономические данные, машинное обучение и аналитику, Agritask предлагает предприятиям ценные сведения и современные инструменты для&nbsp;оптимизации процессов снабжения в&nbsp;разнообразных экосистемах, которые расположены по&nbsp;всему миру: от&nbsp;небольших хозяйств до&nbsp;крупных корпоративных фермерских комплексов. Наша платформа предлагает такие функции, как&nbsp;управление урожаем, профилирование затрат, анализ урожайности, соблюдение нормативных требований и оценку выбросов углерода. Непосредственная связь предприятий с&nbsp;производителями и поставщиками, которые находятся у&nbsp;истоков их цепочки создания ценности, позволяет компании Agritask играть ключевую роль в&nbsp;повышении устойчивости как&nbsp;самих предприятий, так и их цепочек поставок. Мы работаем с&nbsp;огромным количеством разнообразных полуструктурированных данных, включая информацию о&nbsp;погоде, состоянии посевов, почвы, заражении вредителями и болезнями, полевых работах, спутниковых снимках, датчиках и технике. Эти данные играют ключевую роль в&nbsp;нашем агрономическом анализе и оценке рисков. Основная сложность заключается в&nbsp;разнообразии и большом объеме этих данных. Наша система ежедневно обрабатывает десятки миллионов записей, каждая из&nbsp;которых содержит уникальную информацию, необходимую для&nbsp;принятия решений. Затем мы объединяем эти данные для&nbsp;геопространственного анализа и представляем накопленные за&nbsp;месяцы и годы результаты на&nbsp;картах в&nbsp;масштабе стран для&nbsp;множества одновременных пользователей со скоростью отклика менее секунды. Кроме того, поиск в&nbsp;нашей базе данных также должен соответствовать гибким и разнообразным критериям, установленным различными заказчиками. Это добавляет еще один уровень сложности к&nbsp;нашим потребностям в&nbsp;работе с&nbsp;данными. Наша текущая архитектура, состоящая из&nbsp;десятков горизонтально распределенных баз данных PostgreSQL и центрального хранилища данных Snowflake, успешно функционирует уже более десяти лет. Она обеспечивает хорошую горизонтальную масштабируемость, позволяя обслуживать практически неограниченное количество клиентов. Однако в&nbsp;рамках одного клиента возможности горизонтальной масштабируемости ограничены, а&nbsp;вертикальное масштабирование представляет собой сложную задачу. Когда объем данных в&nbsp;конкретном экземпляре базы данных PostgreSQL превышает миллиард записей, вертикальное масштабирование становится все более дорогостоящим. Мы хотим перенести всю тяжелую работу из&nbsp;PostgreSQL в&nbsp;облако, сохранив при&nbsp;этом возможность обслуживания наших приложений для&nbsp;обработки интерактивных данных. Наша цель&nbsp;— обрабатывать огромные объемы данных с&nbsp;низкой задержкой и высоким уровнем параллелизма. Именно в&nbsp;этой ситуации PostgreSQL и Snowflake оказались не&nbsp;совсем подходящими для&nbsp;наших нужд (более подробно об&nbsp;этом я расскажу ниже), поэтому мы начали искать дополнительные или&nbsp;альтернативные решения. Мы рассмотрели несколько вариантов: заменить PostgreSQL, заменить Snowflake или&nbsp;добавить кэш поверх Snowflake. Некоторые из&nbsp;предложенных решений могли&nbsp;бы заменить PostgreSQL, другие могли&nbsp;бы служить кэшем, а&nbsp;некоторые могли&nbsp;бы полностью заменить Snowflake. Мы тщательно изучили все возможные варианты, чтобы выбрать наилучший. Забегая вперед, скажу, что&nbsp;в&nbsp;итоге мы остановились на&nbsp;решении добавить кэш поверх Snowflake, чтобы иметь возможность полностью заменить Snowflake в&nbsp;будущем. Однако мы сохранили PostgreSQL, чтобы избежать полного рефакторинга всей системы. Мы просто перенесли всю тяжелую работу из&nbsp;PostgreSQL в&nbsp;облако. Технические требования Структура таблиц и SQL совместимые с&nbsp;PostgreSQL : Чтобы минимизировать рефакторинг существующих внутренних компонентов, мы стремимся сохранить структуру таблиц как&nbsp;можно ближе к&nbsp;оригинальной структуре PostgreSQL. Это означает, что&nbsp;одни и те&nbsp;же SQL‑запросы (с минимальными автоматическими изменениями) должны выполняться как&nbsp;для «локального» хранилища данных PostgreSQL, так и для «удаленного» облачного хранилища данных. Это довольно строгое требование, которое исключило некоторые потенциально подходящие альтернативы, такие как&nbsp;Apache Cassandra, и оказало значительное влияние на&nbsp;наши архитектурные решения. Для&nbsp;более глубокого изучения этого вопроса потребуется целая отдельная статья, так как&nbsp;мы должны рассмотреть существующую кодовую базу, обратную совместимость и требования заказчика, которые влияют на&nbsp;логику серверного приложения. В&nbsp;гипотетическом сценарии разработки совершенно новой системы с&nbsp;нуля результаты оценки могут оказаться иными. Обработка неструктурированных данных : Структура данных может значительно различаться&nbsp;— от&nbsp;простых числовых значений до&nbsp;сложных JSON‑структур. Например, показания датчика могут&nbsp;быть представлены в&nbsp;виде простого числа (17&nbsp;°C). Список отсканированных контейнеров может храниться в&nbsp;виде массива идентификаторов. Набор полей только созданного объекта сохраняется в&nbsp;виде JSON‑структуры. Записи, полученные на&nbsp;местах, могут&nbsp;быть связаны с&nbsp;материалами, оборудованием и содержать ссылки на&nbsp;изображения или&nbsp;документы в&nbsp;файловом хранилище. Динамические и сложные запросы : Из‑за разнородного характера данных возникает необходимость в&nbsp;гибкости поддерживаемых запросов. Это требование также повлияло на&nbsp;структуру таблицы и требования к&nbsp;совместимости с&nbsp;SQL. Объемы данных : В&nbsp;настоящее время в&nbsp;нашем распоряжении 15–20&nbsp;горизонтально масштабируемых серверов PostgreSQL, на&nbsp;которых установлено хранилище данных Snowflake. Эти серверы обрабатывают более 2&nbsp;миллиардов записей. Наша цель&nbsp;— увеличить этот объем до&nbsp;более чем 1&nbsp;триллиона записей. Высокая степень параллелизма : Наша система должна&nbsp;быть способна обрабатывать от 50&nbsp;до 100&nbsp;одновременных запросов в&nbsp;секунду. И мы стремимся значительно увеличить эти показатели с&nbsp;учетом будущих потребностей без&nbsp;ущерба для&nbsp;производительности. Низкая задержка : Чтобы наше хранилище данных&nbsp;было целесообразным, оно должно обеспечивать время отклика на&nbsp;оперативные запросы в&nbsp;доли секунды. Наша главная цель&nbsp;— запустить интерактивные приложения для&nbsp;обработки данных на&nbsp;основе этого хранилища. Затраты : У&nbsp;нас есть строгий бюджет, который мы не&nbsp;можем превысить. В&nbsp;рамках нашего тестирования мы оценивали затраты на&nbsp;различные платформы. Облачное решение : Мы искали управляемое решение, которое поможет разгрузить наших data‑инженеров и DevOps. При&nbsp;планировании оценки мы уделили особое внимание решениям с&nbsp;бесплатными версиями для&nbsp;локального сервера. Эти решения могли&nbsp;бы пригодиться в&nbsp;средах тестирования и разработки, однако ни одно из&nbsp;них не&nbsp;соответствовало всем остальным критериям. Для&nbsp;производственной среды нам&nbsp;был необходим вариант с&nbsp;облачным управлением. Процесс оценки В&nbsp;нашу оценку&nbsp;были включены как&nbsp;популярные, так и недавно появившиеся облачные хранилища данных. Некоторые из&nbsp;них мы отобрали самостоятельно, другие&nbsp;же&nbsp;были рекомендованы нам консультантами. Поскольку мы не&nbsp;могли протестировать все доступные хранилища данных в&nbsp;мире, мы сосредоточились на&nbsp;тех, которые, по&nbsp;нашему мнению, могли&nbsp;бы хорошо подойти для&nbsp;нашего юзкейса. Конечно, в&nbsp;нашем выборе есть определенная предвзятость, так как&nbsp;некоторые потенциальные кандидаты (например, Oracle и MS SQL Server) нами даже не&nbsp;рассматривались. Процесс оценки для&nbsp;большинства платформ включал следующие этапы: Загрузка 100–200&nbsp;млн записей и запуск тестового набора SQL‑запросов. Этот шаг позволил оценить простоту использования и совместимость с&nbsp;SQL. Чтобы тесты&nbsp;были репрезентативными для&nbsp;нашего юзкейса, мы извлекли ряд типичных SQL‑запросов из&nbsp;наших производственных логов. Каждый из&nbsp;этих примеров запросов включал различные объединения, условия фильтрации и операции агрегирования. Загрузка около 1&nbsp;млрд записей и выполнение того&nbsp;же набора тестовых SQL‑запросов. Этот шаг продемонстрировал, насколько хорошо хранилище данных может масштабироваться для&nbsp;наших данных и запросов. Кроме того, на&nbsp;этом этапе мы косвенно оценили эффективность обработки данных. Запуск 1–50&nbsp;одновременных запросов из&nbsp;Java‑клиента, каждый с&nbsp;выбранным SQL‑запросом. Это&nbsp;был последний этап нашего оценочного процесса, который показал, способно&nbsp;ли хранилище данных обслуживать наши интерактивные приложения. Обратите внимание, что&nbsp;не&nbsp;все хранилища данных прошли этот шаг, поэтому некоторые из&nbsp;тех, которые мы исключили по&nbsp;другим причинам, потенциально могут поддерживать очень высокий уровень параллелизма. Почему мы ограничились 50&nbsp;запросами? Производительность большинства тестируемых хранилищ данных&nbsp;быстро снизилась, и&nbsp;лишь немногие смогли эффективно обрабатывать даже 50&nbsp;одновременных запросов (учитывая затраты и ограничения емкости). Поэтому мы остановились на 50&nbsp;и просто оценили затраты на&nbsp;запуск кластера, который пропорционально масштабируется до&nbsp;необходимого нам уровня параллелизма. Спойлер: В&nbsp;итоге мы остановились на&nbsp;Firebolt, так как&nbsp;он наилучшим образом соответствовал нашим требованиям к&nbsp;простоте использования, низкой задержке и эффективности затрат. Оценка облачных хранилищ данных PostgreSQL Следует отметить, что&nbsp;PostgreSQL&nbsp;— это превосходная база данных с&nbsp;открытым исходным кодом. Она демонстрирует высокую производительность, позволяя выполнять сложные SQL‑запросы на&nbsp;одном сервере, зачастую превосходя многие облачные базы данных. Благодаря хорошей модели данных PostgreSQL способен обрабатывать миллиарды записей данных. Эта система характеризуется многофункциональностью, гибкостью, стабильностью и проверенной надежностью. Она с&nbsp;легкостью поддерживает структурированные, неструктурированные и геопространственные данные. Однако, когда объем базы данных превышает возможности одного сервера, PostgreSQL становится недостаточно. Кроме того, у&nbsp;нее есть хорошо известные ограничения, обусловленные ее архитектурой, с&nbsp;которыми приходится справляться уже не&nbsp;одному поколению администраторов баз данных (обновления, резервные копии, блокировки и&nbsp;т.&nbsp;д.). Snowflake Мы начали рассматривать Snowflake как&nbsp;первый вариант, так как&nbsp;уже используем его для&nbsp;бизнес‑аналитики, и нашу команду по&nbsp;обработке данных он вполне устраивает. Однако мы&nbsp;быстро исключили его из&nbsp;списка из‑за задержек и ограничений в&nbsp;параллелизме. В&nbsp;ходе общения с&nbsp;консультантами мы узнали, что&nbsp;клиенты с&nbsp;похожими на&nbsp;наш юзкейсами переходят к&nbsp;использованию Apache Cassandra в&nbsp;качестве кэша поверх Snowflake (абсолютно по&nbsp;тем&nbsp;же причинам). Плюсы: Простота использования: Snowflake пользуется популярностью благодаря своему удобному интерфейсу и совместим с&nbsp;SQL‑запросами, которые используются нашим текущим бэкендом. Простота управления: Будучи облачным решением, Snowflake избавляет от&nbsp;необходимости сложного управления базами данных и их обслуживания, предлагая масштабируемую архитектуру без&nbsp;необходимости управления физической инфраструктурой. Особенности: Snowflake поддерживает структуры и обработку геопространственных данных, что&nbsp;особенно важно для&nbsp;нашего юзкейса. Простая миграция: Snowflake уже готова к&nbsp;использованию, включая всю необходимую ETL‑инфраструктуру. Минусы: Высокая задержка выполнения запросов: Даже с&nbsp;самыми дорогими движками, которые определенно превышают наш бюджет, задержка на&nbsp;выполнение запроса не&nbsp;может&nbsp;быть снижена до&nbsp;показателя ниже одной секунды, что&nbsp;не&nbsp;соответствует требованиям к&nbsp;операциям в&nbsp;реальном времени. Параллелизм: Snowflake не&nbsp;предназначена для&nbsp;высоко параллельных запросов, поэтому требуется кластеризация, а&nbsp;это значительно увеличивает затраты. Экономическая эффективность: Текущая архитектура позволяет запускать Snowflake по&nbsp;требованию, что&nbsp;значительно снижает затраты. Однако для&nbsp;обслуживания приложений с&nbsp;интерактивными данными она должна работать круглосуточно, что&nbsp;снова приводит к&nbsp;увеличению расходов. TimescaleDB Это&nbsp;был второй идеальный кандидат из‑за простоты миграции&nbsp;— она похож на&nbsp;PostgreSQL, но&nbsp;с&nbsp;расширенными возможностями. TimescaleDB использует так называемые «гипертаблицы» для&nbsp;повышения масштабируемости. Гипертаблицы обеспечивают эффективное разделение данных и масштабирование запросов, что&nbsp;крайне важно для&nbsp;динамического управления большими объемами информации. динамического управления большими объемами информации. Следует отметить, что&nbsp;существует два различных формата разделов гипертаблиц. Стандартным является формат на&nbsp;основе строк, который напоминает стандартное разбиение таблиц в&nbsp;PostgreSQL. Однако есть и другой формат&nbsp;— колоночный, который занимает гораздо меньше дискового пространства, но&nbsp;имеет совершенно иные характеристики производительности и накладывает ограничения на&nbsp;модификацию данных. Плюсы: 100% совместимость с&nbsp;PostgreSQL&nbsp;— важно для&nbsp;нашего юзкейса, потому что&nbsp;это позволило&nbsp;бы выполнить простую миграцию и минимизировать количество требуемого рефакторинга на&nbsp;нашем бэкенде. Производительность при&nbsp;выполнении большинства запросов: TimescaleDB продемонстрировала высокую производительность при&nbsp;выполнении множества запросов с&nbsp;преобразованием данных временных рядов в&nbsp;строковые гипертаблицы. «Холодный запуск» с&nbsp;высокой производительностью: TimescaleDB демонстрирует отличную производительность при&nbsp;первом выполнении запросов с&nbsp;гипертаблицами. Это хорошо известная проблема в&nbsp;PostgreSQL и многих других базах данных, заключающаяся в&nbsp;том, что&nbsp;выполнение запросов занимает много времени, пока не&nbsp;будет заполнен дисковый кэш. Однако TimescaleDB, похоже, успешно решает эту задачу. На&nbsp;выбор есть бесплатные автономные и облачные решения. Минусы: Потребление дискового пространства и затраты: Гипертаблицы на&nbsp;основе строк с&nbsp;индексами занимают немного больше места на&nbsp;диске, чем исходные таблицы PostgreSQL. Предполагаемый объем необходимого дискового пространства для&nbsp;хранения 1&nbsp;млрд записей оказался больше, чем даже максимальный (вне нашего бюджета) план облачного управления, что&nbsp;сразу стало препятствием. Проблемы с&nbsp;производительностью смешанного формата данных: Когда часть гипертаблицы преобразуется в&nbsp;колоночный формат для&nbsp;хранения исторических данных, это экономит огромное количество дискового пространства, но&nbsp;может привести к&nbsp;непредсказуемости производительности запросов. Запросы могут выполняться&nbsp;быстро для&nbsp;свежих данных, но&nbsp;медленно для&nbsp;исторических, или&nbsp;наоборот, что&nbsp;затрудняет оптимизацию производительности. Ограничения на&nbsp;модификацию формата смешанных данных: Использование колоночного формата также усложняет управление изменениями исторических данных, которые иногда требуются по&nbsp;логике приложения. Масштабируемость: Как&nbsp;и в&nbsp;PostgreSQL, база данных ограничена одним сервером и может масштабироваться только за&nbsp;счет добавления реплик для&nbsp;повышения параллелизма запросов чтения. Таким образом, масштабируемость ограничена возможностями вертикального масштабирования одного главного сервера. Amazon Redshift Amazon Redshift показался наиболее разумным вариантом для&nbsp;AWS, особенно в&nbsp;сочетании с&nbsp;PostgreSQL, размещенным на&nbsp;Amazon RDS. Плюсы: Бессерверная архитектура: Решение Redshift устраняет необходимость в&nbsp;постоянном управлении сервером. Существует также provisioned опция, но&nbsp;мы не&nbsp;рассматривали ее, так как&nbsp;приоритет&nbsp;был отдан непрерывному масштабированию вверх и вниз. Совместимость с&nbsp;PostgreSQL: Redshift демонстрирует отличную совместимость с&nbsp;PostgreSQL, включая типы данных и синтаксис запросов. Однако есть несколько особенностей, которые необходимо учитывать. Например, PostgreSQL позволяет хранить тексты размером до 64&nbsp;Кб в&nbsp;текстовых полях, а&nbsp;Redshift не&nbsp;поддерживает такие большие объемы. Также есть проблема с&nbsp;числовыми значениями NaN, которые Redshift не&nbsp;поддерживает. Хорошая масштабируемость данных: Redshift без&nbsp;труда справляется с&nbsp;огромными объемами данных и демонстрирует высокую производительность при&nbsp;массовом приеме. Простая интеграция с&nbsp;PostgreSQL, размещенным на&nbsp;Amazon RDS&nbsp;— автоматический ETL и федеративные запросы. Минусы: Нестабильная производительность запросов: В&nbsp;целом, производительность Redshift&nbsp;была лучше, чем у&nbsp;PostgreSQL, во&nbsp;многих (не во&nbsp;всех) запросах, но&nbsp;не&nbsp;так хороша, как&nbsp;у&nbsp;других оцениваемых решений. На&nbsp;мой взгляд, это решение хорошо подходит для&nbsp;сложных задач в&nbsp;области бизнес‑аналитики, но&nbsp;менее эффективно для&nbsp;запросов с&nbsp;низкой задержкой, которые обслуживают интерактивные юзкейсы. Проблемы с&nbsp;задержкой: Бессерверная система Redshift, как&nbsp;и PostgreSQL, сталкивается с&nbsp;проблемой холодного запуска. Часто при&nbsp;выполнении первого запроса наблюдались задержки, превышающие допустимые значения. Из‑за гибкости бессерверного подхода Redshift это может стать особенно серьезной проблемой, если определенные запросы перестанут выполняться на&nbsp;некоторое время из‑за повторного разогрева базы данных. Ограниченный параллелизм: Redshift с&nbsp;трудом справляется с&nbsp;высокими уровнями параллелизма. Система&nbsp;быстро достигла своего предела, работая менее чем с 10&nbsp;одновременными запросами. Хотя существуют параметры конфигурации, позволяющие увеличить параллелизм, они пропорционально повышают затраты, а&nbsp;максимально допустимые значения по‑прежнему не&nbsp;позволяют достичь запланированного уровня. Проблемы с&nbsp;затратами и масштабируемостью: Бессерверная обработка Redshift может&nbsp;быть очень экономичной для&nbsp;юзкейсов, предполагающих нерегулярную обработку огромных объемов данных. Однако в&nbsp;нашем случае, основываясь на&nbsp;стоимости уже выполненных запросов, прогнозируемые затраты в&nbsp;полностью масштабируемом сценарии оказались выше запланированного бюджета. В&nbsp;следующей части мы рассмотрим Clickhouse, BigQuery, Apache Druid, Cassandra и Firebolt, а&nbsp;также обсудим результаты исследования. Если вы работаете с аналитикой данных и параллельно следите за тем, как развивается инфраструктура — возможно, вас заинтересует открытый урок «Docker в действии: как контейнеризация меняет аналитику данных?» . Разберём реальные кейсы, где контейнеризация упрощает работу с большими объёмами данных, ускоряет деплой аналитических пайплайнов и помогает масштабировать систему без боли. Урок пройдёт 24 апреля, участие бесплатное. Список всех открытых уроков можно посмотреть в календаре. Теги: postgresql dwh snowflake Data Warehouse Analyst хранилища данных базы данных Хабы: Блог компании OTUS Хранилища данных Хранение данных SQL Big Data Нравится +4 Не нравится Добавить в закладки 7 Комментарии 0 OTUS Цифровые навыки от ведущих экспертов Сайт ВКонтакте Telegram 120 Карма 30.6 Рейтинг OTUS @MaxRokatansky Редактор Подписаться Отправить сообщение Комментарии Комментировать Публикации Лучшие за сутки Похожие Информация Сайт otus.ru Дата регистрации 22 марта 2017 Дата основания 1 апреля 2017 Численность 101–200 человек Местоположение Россия Представитель OTUS Истории Ваш аккаунт Войти Регистрация Разделы Статьи Новости Хабы Компании Авторы Песочница Информация Устройство сайта Для авторов Для компаний Документы Соглашение Конфиденциальность Услуги Корпоративный блог Медийная реклама Нативные проекты Образовательные программы Стартапам Facebook Twitter VK Telegram Youtube Яндекс Дзен Настройка языка Техническая поддержка © 2006–2025, Habr window.__INITIAL_STATE__={"adblock":{"hasAcceptableAdsFilter":false,"hasAdblock":false},"articlesList":{"articlesList":{"900080":{"id":"900080","timePublished":"2025-04-11T16:39:19+00:00","isCorporative":true,"lang":"ru","titleHtml":"DWH: История поиска альтернативы PostgreSQL и Snowflake. Часть 1","leadData":{"textHtml":"\u003Cp\u003EВыбор облачного хранилища данных — задача не из тривиальных, особенно когда речь идёт о миллиардах полуструктурированных записей, геоаналитике и требованиях к отклику в доли секунды. В Agritask мы провели масштабное исследование: протестировали популярные DWH-платформы на реальных кейсах, сравнили производительность, параллелизм и затраты. В первой части делимся подходом к оценке, техническими требованиями и тем, почему PostgreSQL и Snowflake перестали справляться с нашими задачами.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F667\u002F8a7\u002Fe83\u002F6678a7e837cbfae09d5a25490dda7dc8.jpg","buttonTextHtml":"Читать далее","image":{"url":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F667\u002F8a7\u002Fe83\u002F6678a7e837cbfae09d5a25490dda7dc8.jpg","fit":"cover","positionY":0,"positionX":0}},"editorVersion":"2.0","postType":"article","postLabels":[{"type":"translation","typeOf":"system","title":"Перевод","data":{"originalAuthorName":"Andrew Schetinin","originalUrl":"https:\u002F\u002Fmedium.com\u002F@aschetinin\u002Fevaluating-data-warehouses-for-low-latency-analytics-462400d6a910"}}],"author":{"id":"1547287","alias":"MaxRokatansky","fullname":"OTUS","avatarUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Favatars\u002Fb9f\u002Fbaf\u002F5f9\u002Fb9fbaf5f96ae52973706a0716bd9216e.jpg","speciality":"Редактор","scoreStats":{"score":120,"votesCount":1060},"rating":30.6,"relatedData":null,"contacts":[],"authorContacts":[],"paymentDetails":{"paymentYandexMoney":null,"paymentPayPalMe":null,"paymentWebmoney":null},"donationsMethod":null,"isInBlacklist":null,"careerProfile":null},"statistics":{"commentsCount":0,"favoritesCount":7,"readingCount":1126,"score":4,"votesCount":4,"votesCountPlus":3,"votesCountMinus":1},"hubs":[{"id":"21052","alias":"otus","type":"corporative","title":"Блог компании OTUS","titleHtml":"Блог компании OTUS","isProfiled":false,"relatedData":null},{"id":"20116","alias":"data_warehouse","type":"collective","title":"Хранилища данных","titleHtml":"Хранилища данных","isProfiled":true,"relatedData":null},{"id":"19197","alias":"dwh","type":"collective","title":"Хранение данных","titleHtml":"Хранение данных","isProfiled":true,"relatedData":null},{"id":"594","alias":"sql","type":"collective","title":"SQL","titleHtml":"SQL","isProfiled":true,"relatedData":null},{"id":"17795","alias":"bigdata","type":"collective","title":"Big Data","titleHtml":"Big Data","isProfiled":true,"relatedData":null}],"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка"},{"id":"6","alias":"admin","title":"Администрирование","titleHtml":"Администрирование"}],"relatedData":{"vote":null,"unreadCommentsCount":0,"bookmarked":false,"canComment":false,"canEdit":false,"canViewVotes":false,"votePlus":{"canVote":false,"isChargeEnough":false,"isKarmaEnough":false,"isVotingOver":false,"isPublicationLimitEnough":false},"voteMinus":{"canVote":false,"isChargeEnough":false,"isKarmaEnough":false,"isVotingOver":false,"isPublicationLimitEnough":false},"canModerateComments":false,"trackerSubscribed":false,"emailSubscribed":false},"textHtml":"\u003Cdiv xmlns=\"http:\u002F\u002Fwww.w3.org\u002F1999\u002Fxhtml\"\u003E\u003Cp\u003ESnowflake, Timescale, Amazon Redshift, ClickHouse, Google Cloud BigQuery, Apache Druid, Apache Cassandra, Firebolt… Выбор подходящего облачного хранилища данных может оказаться довольно сложной задачей — доступных вариантов целое множество. И недавно мне довелось руководить масштабным внутренним исследованием, в рамках которого мы в Agritask сравнивали ведущие облачные хранилища данных. Мы хотели определить, какая платформа лучше всего подходит для выполнения сложных запросов над миллиардами записей с высоким уровнем параллелизма и низкой задержкой, обеспечивая при этом оптимальное соотношение цены и производительности. Процесс исследования включал тщательное тестирование на нескольких системах, чтобы выявить их сильные и слабые стороны, а также измерить контрольные показатели производительности. Учитывая глубину и масштаб наших выводов, я с радостью поделюсь ими, чтобы помочь вам, коллегам data‑инженерам, облегчить сложность выбора подходящего для ваших нужд хранилища.\u003C\u002Fp\u003E\u003Cp\u003EВ этой статье я затрону:\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E\u003Cp\u003EЮзкейс, под который мы подбирали хранилище\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EТехнические требования\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EОценку хранилищ данных: Snowflake, Timescale, Amazon Redshift, ClickHouse, Google Cloud BigQuery, Apache Druid, Apache Cassandra, Firebolt\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EРезультаты нашего исследования\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EСравнение вендоров\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EПроблемы и извлеченные уроки\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EСоветы коллегам‑инженерам\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Ch3\u003EЮзкейс, под который мы подбирали хранилище\u003C\u002Fh3\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb72\u002Faef\u002F46d\u002Fb72aef46d5f17f10ad3fc3181f8d9d68.png\" width=\"783\" height=\"1052\" sizes=\"(max-width: 780px) 100vw, 50vw\" srcset=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw780\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb72\u002Faef\u002F46d\u002Fb72aef46d5f17f10ad3fc3181f8d9d68.png 780w,&#10; https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb72\u002Faef\u002F46d\u002Fb72aef46d5f17f10ad3fc3181f8d9d68.png 781w\" loading=\"lazy\" decode=\"async\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EКомпания Agritask разработала инновационную SaaS‑платформу, которая обеспечивает наглядное представление о предсказуемости и устойчивости поставок сельскохозяйственных культур для предприятий пищевой промышленности и производства напитков. Используя дополненные агрономические данные, машинное обучение и аналитику, Agritask предлагает предприятиям ценные сведения и современные инструменты для оптимизации процессов снабжения в разнообразных экосистемах, которые расположены по всему миру: от небольших хозяйств до крупных корпоративных фермерских комплексов. Наша платформа предлагает такие функции, как управление урожаем, профилирование затрат, анализ урожайности, соблюдение нормативных требований и оценку выбросов углерода. Непосредственная связь предприятий с производителями и поставщиками, которые находятся у истоков их цепочки создания ценности, позволяет компании Agritask играть ключевую роль в повышении устойчивости как самих предприятий, так и их цепочек поставок.\u003C\u002Fp\u003E\u003Cp\u003EМы работаем с огромным количеством разнообразных полуструктурированных данных, включая информацию о погоде, состоянии посевов, почвы, заражении вредителями и болезнями, полевых работах, спутниковых снимках, датчиках и технике. Эти данные играют ключевую роль в нашем агрономическом анализе и оценке рисков. Основная сложность заключается в разнообразии и большом объеме этих данных. Наша система ежедневно обрабатывает десятки миллионов записей, каждая из которых содержит уникальную информацию, необходимую для принятия решений. Затем мы объединяем эти данные для геопространственного анализа и представляем накопленные за месяцы и годы результаты на картах в масштабе стран для множества одновременных пользователей со скоростью отклика менее секунды. Кроме того, поиск в нашей базе данных также должен соответствовать гибким и разнообразным критериям, установленным различными заказчиками. Это добавляет еще один уровень сложности к нашим потребностям в работе с данными.\u003C\u002Fp\u003E\u003Cp\u003EНаша текущая архитектура, состоящая из десятков горизонтально распределенных баз данных PostgreSQL и центрального хранилища данных Snowflake, успешно функционирует уже более десяти лет. Она обеспечивает хорошую горизонтальную масштабируемость, позволяя обслуживать практически неограниченное количество клиентов. Однако в рамках одного клиента возможности горизонтальной масштабируемости ограничены, а вертикальное масштабирование представляет собой сложную задачу. Когда объем данных в конкретном экземпляре базы данных PostgreSQL превышает \u003Cstrong\u003Eмиллиард \u003C\u002Fstrong\u003Eзаписей, вертикальное масштабирование становится все более дорогостоящим. Мы хотим перенести всю тяжелую работу из PostgreSQL в облако, сохранив при этом возможность обслуживания наших приложений для обработки интерактивных данных. Наша цель — обрабатывать огромные объемы данных с низкой задержкой и высоким уровнем параллелизма. Именно в этой ситуации PostgreSQL и Snowflake оказались не совсем подходящими для наших нужд (более подробно об этом я расскажу ниже), поэтому мы начали искать дополнительные или альтернативные решения.\u003C\u002Fp\u003E\u003Cp\u003EМы рассмотрели несколько вариантов: заменить PostgreSQL, заменить Snowflake или добавить кэш поверх Snowflake. Некоторые из предложенных решений могли бы заменить PostgreSQL, другие могли бы служить кэшем, а некоторые могли бы полностью заменить Snowflake. Мы тщательно изучили все возможные варианты, чтобы выбрать наилучший. Забегая вперед, скажу, что в итоге мы остановились на решении добавить кэш поверх Snowflake, чтобы иметь возможность полностью заменить Snowflake в будущем. Однако мы сохранили PostgreSQL, чтобы избежать полного рефакторинга всей системы. Мы просто перенесли всю тяжелую работу из PostgreSQL в облако.\u003C\u002Fp\u003E\u003Ch3\u003EТехнические требования\u003C\u002Fh3\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003EСтруктура таблиц и SQL совместимые с PostgreSQL\u003C\u002Fstrong\u003E: Чтобы минимизировать рефакторинг существующих внутренних компонентов, мы стремимся сохранить структуру таблиц как можно ближе к оригинальной структуре PostgreSQL. Это означает, что одни и те же SQL‑запросы (с минимальными автоматическими изменениями) должны выполняться как для «локального» хранилища данных PostgreSQL, так и для «удаленного» облачного хранилища данных.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003E\u003Cem\u003EЭто довольно строгое требование, которое исключило некоторые потенциально подходящие альтернативы, такие как Apache Cassandra, и оказало значительное влияние на наши архитектурные решения. Для более глубокого изучения этого вопроса потребуется целая отдельная статья, так как мы должны рассмотреть существующую кодовую базу, обратную совместимость и требования заказчика, которые влияют на логику серверного приложения. В гипотетическом сценарии разработки совершенно новой системы с нуля результаты оценки могут оказаться иными.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003EОбработка неструктурированных данных\u003C\u002Fstrong\u003E: Структура данных может значительно различаться — от простых числовых значений до сложных JSON‑структур. Например, показания датчика могут быть представлены в виде простого числа (17 °C). Список отсканированных контейнеров может храниться в виде массива идентификаторов. Набор полей только созданного объекта сохраняется в виде JSON‑структуры. Записи, полученные на местах, могут быть связаны с материалами, оборудованием и содержать ссылки на изображения или документы в файловом хранилище.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003EДинамические и сложные запросы\u003C\u002Fstrong\u003E: Из‑за разнородного характера данных возникает необходимость в гибкости поддерживаемых запросов. Это требование также повлияло на структуру таблицы и требования к совместимости с SQL.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003EОбъемы данных\u003C\u002Fstrong\u003E: В настоящее время в нашем распоряжении 15–20 горизонтально масштабируемых серверов PostgreSQL, на которых установлено хранилище данных Snowflake. Эти серверы обрабатывают более 2 миллиардов записей. Наша цель — увеличить этот объем до более чем 1 триллиона записей.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003EВысокая степень параллелизма\u003C\u002Fstrong\u003E: Наша система должна быть способна обрабатывать от 50 до 100 одновременных запросов в секунду. И мы стремимся значительно увеличить эти показатели с учетом будущих потребностей без ущерба для производительности.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003EНизкая задержка\u003C\u002Fstrong\u003E: Чтобы наше хранилище данных было целесообразным, оно должно обеспечивать время отклика на оперативные запросы в доли секунды. Наша главная цель — запустить интерактивные приложения для обработки данных на основе этого хранилища.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003EЗатраты\u003C\u002Fstrong\u003E: У нас есть строгий бюджет, который мы не можем превысить. В рамках нашего тестирования мы оценивали затраты на различные платформы.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003EОблачное решение\u003C\u002Fstrong\u003E: Мы искали управляемое решение, которое поможет разгрузить наших data‑инженеров и DevOps.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003E\u003Cem\u003EПри планировании оценки мы уделили особое внимание решениям с бесплатными версиями для локального сервера. Эти решения могли бы пригодиться в средах тестирования и разработки, однако ни одно из них не соответствовало всем остальным критериям. Для производственной среды нам был необходим вариант с облачным управлением.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\u003Ch3\u003EПроцесс оценки\u003C\u002Fh3\u003E\u003Cp\u003EВ нашу оценку были включены как популярные, так и недавно появившиеся облачные хранилища данных. Некоторые из них мы отобрали самостоятельно, другие же были рекомендованы нам консультантами. Поскольку мы не могли протестировать все доступные хранилища данных в мире, мы сосредоточились на тех, которые, по нашему мнению, могли бы хорошо подойти для нашего юзкейса. Конечно, в нашем выборе есть определенная предвзятость, так как некоторые потенциальные кандидаты (например, Oracle и MS SQL Server) нами даже не рассматривались.\u003C\u002Fp\u003E\u003Cp\u003EПроцесс оценки для большинства платформ включал следующие этапы:\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E\u003Cp\u003E\u003Cem\u003EЗагрузка 100–200 млн записей и запуск тестового набора SQL‑запросов. Этот шаг позволил оценить простоту использования и совместимость с SQL.\u003Cbr\u002F\u003EЧтобы тесты были репрезентативными для нашего юзкейса, мы извлекли ряд типичных SQL‑запросов из наших производственных логов. Каждый из этих примеров запросов включал различные объединения, условия фильтрации и операции агрегирования.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EЗагрузка около 1 млрд записей и выполнение того же набора тестовых SQL‑запросов. Этот шаг продемонстрировал, насколько хорошо хранилище данных может масштабироваться для наших данных и запросов. Кроме того, на этом этапе мы косвенно оценили эффективность обработки данных.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EЗапуск 1–50 одновременных запросов из Java‑клиента, каждый с выбранным SQL‑запросом. Это был последний этап нашего оценочного процесса, который показал, способно ли хранилище данных обслуживать наши интерактивные приложения.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003E\u003Cem\u003EОбратите внимание, что не все хранилища данных прошли этот шаг, поэтому некоторые из тех, которые мы исключили по другим причинам, потенциально могут поддерживать очень высокий уровень параллелизма.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cem\u003EПочему мы ограничились 50 запросами? Производительность большинства тестируемых хранилищ данных быстро снизилась, и лишь немногие смогли эффективно обрабатывать даже 50 одновременных запросов (учитывая затраты и ограничения емкости). Поэтому мы остановились на 50 и просто оценили затраты на запуск кластера, который пропорционально масштабируется до необходимого нам уровня параллелизма.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EСпойлер:\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cp\u003EВ итоге мы остановились на Firebolt, так как он наилучшим образом соответствовал нашим требованиям к простоте использования, низкой задержке и эффективности затрат.\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Ch2\u003EОценка облачных хранилищ данных\u003C\u002Fh2\u003E\u003Ch3\u003EPostgreSQL\u003C\u002Fh3\u003E\u003Cp\u003EСледует отметить, что PostgreSQL — это превосходная база данных с открытым исходным кодом. Она демонстрирует высокую производительность, позволяя выполнять сложные SQL‑запросы на одном сервере, зачастую превосходя многие облачные базы данных. Благодаря хорошей модели данных PostgreSQL способен обрабатывать миллиарды записей данных. Эта система характеризуется многофункциональностью, гибкостью, стабильностью и проверенной надежностью. Она с легкостью поддерживает структурированные, неструктурированные и геопространственные данные.\u003C\u002Fp\u003E\u003Cp\u003EОднако, когда объем базы данных превышает возможности одного сервера, PostgreSQL становится недостаточно. Кроме того, у нее есть хорошо известные ограничения, обусловленные ее архитектурой, с которыми приходится справляться уже не одному поколению администраторов баз данных (обновления, резервные копии, блокировки и т. д.).\u003C\u002Fp\u003E\u003Ch3\u003ESnowflake\u003C\u002Fh3\u003E\u003Cp\u003EМы начали рассматривать Snowflake как первый вариант, так как уже используем его для бизнес‑аналитики, и нашу команду по обработке данных он вполне устраивает. Однако мы быстро исключили его из списка из‑за задержек и ограничений в параллелизме. В ходе общения с консультантами мы узнали, что клиенты с похожими на наш юзкейсами переходят к использованию Apache Cassandra в качестве кэша поверх Snowflake (абсолютно по тем же причинам).\u003C\u002Fp\u003E\u003Cp\u003EПлюсы:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EПростота использования: Snowflake пользуется популярностью благодаря своему удобному интерфейсу и совместим с SQL‑запросами, которые используются нашим текущим бэкендом.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EПростота управления: Будучи облачным решением, Snowflake избавляет от необходимости сложного управления базами данных и их обслуживания, предлагая масштабируемую архитектуру без необходимости управления физической инфраструктурой.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EОсобенности: Snowflake поддерживает структуры и обработку геопространственных данных, что особенно важно для нашего юзкейса.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EПростая миграция: Snowflake уже готова к использованию, включая всю необходимую ETL‑инфраструктуру.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EМинусы:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EВысокая задержка выполнения запросов: Даже с самыми дорогими движками, которые определенно превышают наш бюджет, задержка на выполнение запроса не может быть снижена до показателя ниже одной секунды, что не соответствует требованиям к операциям в реальном времени.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EПараллелизм: Snowflake не предназначена для высоко параллельных запросов, поэтому требуется кластеризация, а это значительно увеличивает затраты.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EЭкономическая эффективность: Текущая архитектура позволяет запускать Snowflake по требованию, что значительно снижает затраты. Однако для обслуживания приложений с интерактивными данными она должна работать круглосуточно, что снова приводит к увеличению расходов.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch3\u003ETimescaleDB\u003C\u002Fh3\u003E\u003Cp\u003EЭто был второй идеальный кандидат из‑за простоты миграции — она похож на PostgreSQL, но с расширенными возможностями.\u003C\u002Fp\u003E\u003Cp\u003ETimescaleDB использует так называемые «гипертаблицы» для повышения масштабируемости. Гипертаблицы обеспечивают эффективное разделение данных и масштабирование запросов, что крайне важно для динамического управления большими объемами информации. динамического управления большими объемами информации. Следует отметить, что существует два различных формата разделов гипертаблиц. Стандартным является формат на основе строк, который напоминает стандартное разбиение таблиц в PostgreSQL. Однако есть и другой формат — колоночный, который занимает гораздо меньше дискового пространства, но имеет совершенно иные характеристики производительности и накладывает ограничения на модификацию данных.\u003C\u002Fp\u003E\u003Cp\u003EПлюсы:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E100% совместимость с PostgreSQL — важно для нашего юзкейса, потому что это позволило бы выполнить простую миграцию и минимизировать количество требуемого рефакторинга на нашем бэкенде.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EПроизводительность при выполнении большинства запросов: TimescaleDB продемонстрировала высокую производительность при выполнении множества запросов с преобразованием данных временных рядов в строковые гипертаблицы.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E«Холодный запуск» с высокой производительностью: TimescaleDB демонстрирует отличную производительность при первом выполнении запросов с гипертаблицами. Это хорошо известная проблема в PostgreSQL и многих других базах данных, заключающаяся в том, что выполнение запросов занимает много времени, пока не будет заполнен дисковый кэш. Однако TimescaleDB, похоже, успешно решает эту задачу.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНа выбор есть бесплатные автономные и облачные решения.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EМинусы:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EПотребление дискового пространства и затраты: Гипертаблицы на основе строк с индексами занимают немного больше места на диске, чем исходные таблицы PostgreSQL. Предполагаемый объем необходимого дискового пространства для хранения 1 млрд записей оказался больше, чем даже максимальный (вне нашего бюджета) план облачного управления, что сразу стало препятствием.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EПроблемы с производительностью смешанного формата данных: Когда часть гипертаблицы преобразуется в колоночный формат для хранения исторических данных, это экономит огромное количество дискового пространства, но может привести к непредсказуемости производительности запросов. Запросы могут выполняться быстро для свежих данных, но медленно для исторических, или наоборот, что затрудняет оптимизацию производительности.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EОграничения на модификацию формата смешанных данных: Использование колоночного формата также усложняет управление изменениями исторических данных, которые иногда требуются по логике приложения.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EМасштабируемость: Как и в PostgreSQL, база данных ограничена одним сервером и может масштабироваться только за счет добавления реплик для повышения параллелизма запросов чтения. Таким образом, масштабируемость ограничена возможностями вертикального масштабирования одного главного сервера.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch3\u003EAmazon Redshift\u003C\u002Fh3\u003E\u003Cp\u003EAmazon Redshift показался наиболее разумным вариантом для AWS, особенно в сочетании с PostgreSQL, размещенным на Amazon RDS.\u003C\u002Fp\u003E\u003Cp\u003EПлюсы:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EБессерверная архитектура: Решение Redshift устраняет необходимость в постоянном управлении сервером. Существует также provisioned опция, но мы не рассматривали ее, так как приоритет был отдан непрерывному масштабированию вверх и вниз.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EСовместимость с PostgreSQL: Redshift демонстрирует отличную совместимость с PostgreSQL, включая типы данных и синтаксис запросов. Однако есть несколько особенностей, которые необходимо учитывать. Например, PostgreSQL позволяет хранить тексты размером до 64 Кб в текстовых полях, а Redshift не поддерживает такие большие объемы. Также есть проблема с числовыми значениями NaN, которые Redshift не поддерживает.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EХорошая масштабируемость данных: Redshift без труда справляется с огромными объемами данных и демонстрирует высокую производительность при массовом приеме.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EПростая интеграция с PostgreSQL, размещенным на Amazon RDS — автоматический ETL и федеративные запросы.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EМинусы:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EНестабильная производительность запросов: В целом, производительность Redshift была лучше, чем у PostgreSQL, во многих (не во всех) запросах, но не так хороша, как у других оцениваемых решений. На мой взгляд, это решение хорошо подходит для сложных задач в области бизнес‑аналитики, но менее эффективно для запросов с низкой задержкой, которые обслуживают интерактивные юзкейсы.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EПроблемы с задержкой: Бессерверная система Redshift, как и PostgreSQL, сталкивается с проблемой холодного запуска. Часто при выполнении первого запроса наблюдались задержки, превышающие допустимые значения. Из‑за гибкости бессерверного подхода Redshift это может стать особенно серьезной проблемой, если определенные запросы перестанут выполняться на некоторое время из‑за повторного разогрева базы данных.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EОграниченный параллелизм: Redshift с трудом справляется с высокими уровнями параллелизма. Система быстро достигла своего предела, работая менее чем с 10 одновременными запросами. Хотя существуют параметры конфигурации, позволяющие увеличить параллелизм, они пропорционально повышают затраты, а максимально допустимые значения по‑прежнему не позволяют достичь запланированного уровня.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EПроблемы с затратами и масштабируемостью: Бессерверная обработка Redshift может быть очень экономичной для юзкейсов, предполагающих нерегулярную обработку огромных объемов данных. Однако в нашем случае, основываясь на стоимости уже выполненных запросов, прогнозируемые затраты в полностью масштабируемом сценарии оказались выше запланированного бюджета.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EВ следующей части мы рассмотрим Clickhouse, BigQuery, Apache Druid, Cassandra и Firebolt, а также обсудим результаты исследования.\u003C\u002Fp\u003E\u003Chr\u002F\u003E\u003Cp\u003EЕсли вы работаете с аналитикой данных и параллельно следите за тем, как развивается инфраструктура — возможно, вас заинтересует открытый урок \u003Ca href=\"https:\u002F\u002Fotus.pw\u002Fvksb\u002F\"\u003E\u003Cstrong\u003E«Docker в действии: как контейнеризация меняет аналитику данных?»\u003C\u002Fstrong\u003E\u003C\u002Fa\u003E. Разберём реальные кейсы, где контейнеризация упрощает работу с большими объёмами данных, ускоряет деплой аналитических пайплайнов и помогает масштабировать систему без боли. Урок пройдёт 24 апреля, участие бесплатное.\u003C\u002Fp\u003E\u003Cblockquote\u003E\u003Cp\u003EСписок всех открытых уроков можно посмотреть \u003Ca href=\"https:\u002F\u002Fotus.pw\u002FSSo0\u002F\"\u003Eв календаре.\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\u003C\u002Fdiv\u003E","tags":[{"titleHtml":"postgresql"},{"titleHtml":"dwh"},{"titleHtml":"snowflake"},{"titleHtml":"Data Warehouse Analyst"},{"titleHtml":"хранилища данных"},{"titleHtml":"базы данных"}],"metadata":{"stylesUrls":[],"scriptUrls":[],"shareImageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F667\u002F8a7\u002Fe83\u002F6678a7e837cbfae09d5a25490dda7dc8.jpg","shareImageWidth":1200,"shareImageHeight":630,"vkShareImageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F667\u002F8a7\u002Fe83\u002F6678a7e837cbfae09d5a25490dda7dc8.jpg","schemaJsonLd":"{\"@context\":\"http:\\\u002F\\\u002Fschema.org\",\"@type\":\"Article\",\"mainEntityOfPage\":{\"@type\":\"WebPage\",\"@id\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Fcompanies\\\u002Fotus\\\u002Farticles\\\u002F900080\\\u002F\"},\"headline\":\"DWH: История поиска альтернативы PostgreSQL и Snowflake. Часть 1\",\"datePublished\":\"2025-04-11T19:39:19+03:00\",\"dateModified\":\"2025-04-11T20:21:01+03:00\",\"author\":{\"@type\":\"Person\",\"name\":\"OTUS\"},\"publisher\":{\"@type\":\"Organization\",\"name\":\"Habr\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fwebt\\\u002Fa_\\\u002Flk\\\u002F9m\\\u002Fa_lk9mjkccjox-zccjrpfolmkmq.png\"}},\"description\":\"Snowflake, Timescale, Amazon Redshift, ClickHouse, Google Cloud BigQuery, Apache Druid, Apache Cassandra, Firebolt&hellip; Выбор подходящего облачного хранилища данных...\",\"url\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Fcompanies\\\u002Fotus\\\u002Farticles\\\u002F900080\\\u002F#post-content-body\",\"about\":[\"c_otus\",\"h_data_warehouse\",\"h_dwh\",\"h_sql\",\"h_bigdata\",\"f_develop\",\"f_admin\"],\"image\":[\"https:\\\u002F\\\u002Fhabr.com\\\u002Fshare\\\u002Fpublication\\\u002F900080\\\u002Ff8992f138787b4e3c995bba7780ba2d7\\\u002F\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Fb72\\\u002Faef\\\u002F46d\\\u002Fb72aef46d5f17f10ad3fc3181f8d9d68.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F667\\\u002F8a7\\\u002Fe83\\\u002F6678a7e837cbfae09d5a25490dda7dc8.jpg\"]}","metaDescription":"Snowflake, Timescale, Amazon Redshift, ClickHouse, Google Cloud BigQuery, Apache Druid, Apache Cassandra, Firebolt… Выбор подходящего облачного хранилища данных может оказаться довольно сложной...","mainImageUrl":null,"amp":true,"customTrackerLinks":[]},"polls":[],"commentsEnabled":{"status":true,"reason":null},"rulesRemindEnabled":false,"votesEnabled":true,"status":"published","plannedPublishTime":null,"checked":null,"hasPinnedComments":false,"format":null,"banner":null,"multiwidget":null,"multiwidgetUuid":null,"readingTime":13,"complexity":"medium","isEditorial":false,"allowedFeatures":{"isTestTargetAllow":true}}},"articlesIds":{},"isLoading":false,"pagesCount":{},"route":{},"reasonsList":null,"postReasonsList":null,"view":"cards","lastVisitedRoute":{},"ssrCommentsArticleIds":[""],"viewedPosts":[],"myFeedFilter":{"complexity":"all","score":"all","types":["articles","posts","news"]},"myFeedIsApplyFilters":false,"myFeedIsForce":false,"karma":{"userReasonsList":null}},"authorContribution":{"authors":{}},"betaTest":{"currentAnnouncement":null,"announcements":{},"announcementCards":null,"announcementComments":{},"announcementCommentThreads":{},"announcementCommentingStatuses":{},"archivedList":[]},"authorStatistics":{"articleRefs":{},"articleIds":{},"pagesCount":{},"route":{},"viewsCount":[],"maxStatsCount":{}},"career":{"seoLandings":[],"hubs":""},"comments":{"articleComments":{},"articlePinnedComments":{},"searchCommentsResults":null,"pagesCount":null,"commentAccess":{},"scrollParents":{},"pageArticleComments":{"lastViewedComment":0,"postId":null,"lastCommentTimestamp":"","moderated":[],"moderatedIds":[],"commentRoute":"","idempotenceKey":""}},"companies":{"companyRefs":{"otus":{"alias":"otus","imageUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fcompany\u002Fa65\u002F525\u002F4fe\u002Fa655254feebb0b25a027b5e276ea6489.png","titleHtml":"OTUS","descriptionHtml":"Цифровые навыки от ведущих экспертов","relatedData":null,"statistics":{"subscribersCount":160576,"rating":562.92,"invest":null,"postsCount":4020,"threadsCount":18,"newsCount":6,"vacanciesCount":0,"employeesCount":49,"careerRating":null},"foundationDate":{"year":"2017","month":"04","day":"01"},"location":{"city":{"id":"447159","title":"Москва"},"region":{"id":"1885","title":"Москва и Московская обл."},"country":{"id":"168","title":"Россия"}},"siteUrl":"https:\u002F\u002Fotus.ru","staffNumber":"101–200 человек","registrationDate":"2017-03-22T08:17:26+00:00","representativeUser":{"alias":"MaxRokatansky","fullname":"OTUS"},"contacts":[{"title":"Сайт","url":"https:\u002F\u002Fotus.ru","siteTitle":"OTUS - Онлайн-образование","favicon":"https:\u002F\u002Fotus.ru\u002Ffavicon.ico"},{"title":"ВКонтакте","url":"https:\u002F\u002Fvk.com\u002Fclub145052891","siteTitle":"VK | VK","favicon":"https:\u002F\u002Fm.vk.com\u002Fimages\u002Ficons\u002Ffavicons\u002Ffav_logo.ico?10"},{"title":"Telegram","url":"https:\u002F\u002Ftelegram.me\u002FOtusjava","siteTitle":"Telegram: View @Otusjava","favicon":"https:\u002F\u002Ftelegram.org\u002Fimg\u002Fwebsite_icon.svg?4"}],"settings":{"analyticsSettings":[],"branding":null,"status":"active","isStartup":false,"hasActivePolls":false,"shouldShowHabrAds":true},"metadata":{"titleHtml":"OTUS, Москва - Цифровые навыки от ведущих экспертов с 1 апреля 2017 г.","title":"OTUS, Москва - Цифровые навыки от ведущих экспертов с 1 апреля 2017 г.","keywords":["docker","управление продуктом"],"descriptionHtml":"4 020 статей от авторов компании OTUS","description":"4 020 статей от авторов компании OTUS"},"aDeskSettings":null,"careerAlias":"otus","schoolAlias":"23-otus"}},"companyIds":{},"companyTopIds":{},"pagesCount":{},"companyProfiles":{},"companiesCategories":[],"companiesCategoriesTotalCount":0,"companiesWidgets":{},"companiesWorkers":{},"companiesFans":{},"multiwidgets":{},"route":{},"isLoading":false,"companyWorkersLoading":false,"companyFansLoading":false,"multiwidgetLoading":false,"vacancies":{},"companiesGalleries":{},"companiesBanners":{},"companiesLandingVacancies":{},"companiesTechnologies":{},"workplaceInfo":null},"companyAdmin":{"companyInfo":null,"companyInfoLoading":false,"faqArticles":null,"brandingPreviewImageUrl":null,"jivoStatus":0,"adminNotifications":null,"availableInvitesCount":{}},"companyAdd":{"currentStep":"","stepsData":{},"uncompletedSteps":[],"isStepLoading":true,"isStepCommitting":false,"isInitialized":false,"agreementContent":""},"companiesContribution":{"hubs":{},"flows":{},"companyRefs":{}},"companyHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"conversation":{"messages":[],"respondent":null,"isLoadMore":false},"conversations":{"conversations":[],"pagesCount":0},"docs":{"menu":{},"articles":{},"mainMenu":[],"loading":{"main":false,"dropdown":false,"article":false}},"feature":{"isProbablyVisible":true},"fixedBanner":{"isArticleStickyPanelVisible":false,"isArticleStickyPanelAtTheBottom":false,"isFixedBannerVisible":false,"isStickyPanelIconsHidden":false},"flows":{"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка","route":{"name":"FLOW_PAGE","params":{"flowName":"develop","hl":"ru"}}},{"id":"6","alias":"admin","title":"Администрирование","titleHtml":"Администрирование","route":{"name":"FLOW_PAGE","params":{"flowName":"admin","hl":"ru"}}},{"id":"2","alias":"design","title":"Дизайн","titleHtml":"Дизайн","route":{"name":"FLOW_PAGE","params":{"flowName":"design","hl":"ru"}}},{"id":"3","alias":"management","title":"Менеджмент","titleHtml":"Менеджмент","route":{"name":"FLOW_PAGE","params":{"flowName":"management","hl":"ru"}}},{"id":"4","alias":"marketing","title":"Маркетинг","titleHtml":"Маркетинг","route":{"name":"FLOW_PAGE","params":{"flowName":"marketing","hl":"ru"}}},{"id":"7","alias":"popsci","title":"Научпоп","titleHtml":"Научпоп","route":{"name":"FLOW_PAGE","params":{"flowName":"popsci","hl":"ru"}}}],"updates":{}},"global":{"isPwa":false,"device":"desktop","isHabrCom":true,"requestId":"4dad21cb11e87f60b663018622b14275"},"hubs":{"hubRefs":{},"hubIds":{},"pagesCount":{},"isLoading":false,"route":{}},"hubsBlock":{"hubRefs":{},"hubIds":{}},"i18n":{"fl":"ru","hl":"ru"},"info":{"welcomePage":{},"isLoading":true},"location":{"urlStruct":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"query":{},"pathname":"\u002Fru\u002Fcompanies\u002Fotus\u002Farticles\u002F900080\u002F","path":"\u002Fru\u002Fcompanies\u002Fotus\u002Farticles\u002F900080\u002F","href":"\u002Fru\u002Fcompanies\u002Fotus\u002Farticles\u002F900080\u002F"}},"me":{"user":null,"uuid":null,"ppgDemanded":false,"karmaResetInfo":{"canReincarnate":null,"wasReincarnated":null,"currentScore":null},"notes":null,"userUpdates":{"feeds":{"newPostsCount":null,"newThreadsCount":null,"newNewsCount":null,"newCount":null},"conversationUnreadCount":0},"features":null},"mostReadingList":{"mostReadingListIds":[],"mostReadingListRefs":null,"promoPost":null},"onboarding":{"currentStep":null,"stepsData":{},"stepsErrors":{},"completedSteps":[],"isStepCommitting":false,"isCommitDisabled":true},"ppa":{"articles":{},"card":null,"transactions":null,"totalTransactions":null,"isAccessible":null},"projectsBlocks":{"activeBlocks":{"vacancies":"project-block-company-article"}},"promoData":{"isLoading":false,"hasLoaded":false,"featurer":null,"megaposts":null,"promoLinks":null,"promoPosts":null,"sticker":null},"publicationStatistics":{"statsInfo":{},"statsFunnels":{},"statsGraph":{},"defaultSuggest":{},"suggest":{},"timeTracker":{},"isTrackingActivity":false,"isUserActive":true,"otherPublicationStats":{}},"pullRefresh":{"shouldRefresh":false},"sandbox":{"articleIds":[],"articleRefs":{},"pagesCount":null,"route":{},"lastVisitedRoute":{},"isLoading":false},"search":{"searchQueryError":null},"settingsOther":{"inputs":{"uiLang":{"errors":[],"ref":null,"value":""},"articlesLangEnglish":{"errors":[],"ref":null,"value":false},"articlesLangRussian":{"errors":[],"ref":null,"value":false},"agreement":{"errors":[],"ref":null,"value":false},"email":{"errors":[],"ref":null,"value":true},"digest":{"errors":[],"ref":null,"value":true}}},"similarList":{"similarListIds":[],"similarListRefs":null},"ssr":{"error":null,"isDataLoaded":true,"isDataLoading":false,"isHydrationFailed":false,"isServer":false},"stories":{"stories":[{"id":"story-1014","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F74d\u002F75a\u002Fa86\u002F74d75aa86cd8714da739797511a6a272.png","title":"Рунити","link":"https:\u002F\u002Fu.habr.com\u002FE32Jt"},"title":"За карьерными мечтами — в Рунити","lang":"ru","startTime":"2025-04-10T15:09:00+03:00","finishTime":"2025-04-23T23:59:00+03:00","slides":[{"id":"story-1014_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff80\u002F78b\u002F815\u002Ff8078b8153f5426aec466a6d8605e2f6.png","button":{"title":"Подробнее","link":"https:\u002F\u002Fu.habr.com\u002FE32Jt","colorType":"light"}},{"id":"story-1014_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F07f\u002Fd33\u002F816\u002F07fd33816d369c1df10800a105456b56.png","button":null},{"id":"story-1014_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffe6\u002F439\u002F9ba\u002Ffe64399bad02391b89854eeaca3d0e7e.png","button":{"title":"Какие испытания","link":"https:\u002F\u002Fu.habr.com\u002FAhVxE","colorType":"light"}},{"id":"story-1014_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fad5\u002Ff62\u002F397\u002Fad5f623976452e0aa0d39e4d98474758.png","button":{"title":"Активировать","link":"https:\u002F\u002Fu.habr.com\u002FE32Jt","colorType":"light"}},{"id":"story-1014_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb5b\u002F0f6\u002F003\u002Fb5b0f6003ba6012626f93f311d949c3e.png","button":null},{"id":"story-1014_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fbc0\u002Ff59\u002F88b\u002Fbc0f5988ba07884aaa9f09bfe6c5ec2e.png","button":{"title":"Хочу так же","link":"https:\u002F\u002Fu.habr.com\u002FE32Jt","colorType":"light"}},{"id":"story-1014_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd15\u002F88b\u002Fefd\u002Fd1588befd5ea155500f4ebc891bf6142.png","button":null},{"id":"story-1014_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffb8\u002F089\u002F394\u002Ffb8089394dfede016209e8fc3a8b2882.png","button":{"title":"Использовать","link":"https:\u002F\u002Fu.habr.com\u002FE32Jt","colorType":"light"}},{"id":"story-1014_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F170\u002F25d\u002F9d5\u002F17025d9d5f2c3f548af6c69e8b236eda.png","button":{"title":"Подробнее","link":"https:\u002F\u002Fu.habr.com\u002FE32Jt","colorType":"light"}},{"id":"story-1014_10","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fca3\u002Fcdd\u002Fd40\u002Fca3cddd4065003531379071671dc280f.png","button":{"title":"Добро пожаловать","link":"https:\u002F\u002Fu.habr.com\u002FE32Jt","colorType":"light"}}]},{"id":"story-1012","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F777\u002F0d7\u002F91c\u002F7770d791c212e1c46c2b08ede63eaa29.png","title":"ШАД","link":"https:\u002F\u002Fu.habr.com\u002Fshad"},"title":"Открыт приём в Школу анализа данных","lang":"ru","startTime":"2025-04-10T00:05:12+03:00","finishTime":"2025-04-24T23:55:00+03:00","slides":[{"id":"story-1012_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F409\u002F045\u002F02f\u002F40904502f23417c4eda47d2ad6700216.png","button":{"title":"Поступаю в ШАД","link":"https:\u002F\u002Fu.habr.com\u002Fshad","colorType":"light"}},{"id":"story-1012_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F692\u002F156\u002F11a\u002F69215611a8aaf846ce1c6f8e4f58bb86.png","button":{"title":"Узнать больше","link":"https:\u002F\u002Fu.habr.com\u002Fshad","colorType":"light"}},{"id":"story-1012_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fdb9\u002F669\u002F6f4\u002Fdb96696f41e2eeb617168a3c3857b0d9.png","button":{"title":"Узнать больше","link":"https:\u002F\u002Fu.habr.com\u002Fshad","colorType":"light"}},{"id":"story-1012_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F815\u002F823\u002F62b\u002F81582362b0f1cc3140e71fe5a4f0d5b5.png","button":{"title":"Подать заявку","link":"https:\u002F\u002Fu.habr.com\u002Fshad","colorType":"light"}}]},{"id":"story-1010","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2ff\u002Ffa5\u002Fd97\u002F2fffa5d9751a2bb9b711b63b34537a38.png","title":"Яндекс 360","link":"https:\u002F\u002Fu.habr.com\u002Fya360_bt"},"title":"Идем на митап от Яндекс 360","lang":"ru","startTime":"2025-04-03T18:00:00+03:00","finishTime":"2025-04-16T23:59:00+03:00","slides":[{"id":"story-1010_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F07f\u002F3fd\u002F5a3\u002F07f3fd5a35c27392c6bb49bd4e46f1b7.png","button":{"title":"Узнать о митапе","link":"https:\u002F\u002Fu.habr.com\u002Fya360_bt","colorType":"dark"}},{"id":"story-1010_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff9f\u002Fd5b\u002F389\u002Ff9fd5b38997be20ad35ff40b4f6482f7.png","button":{"title":"Программа митапа","link":"https:\u002F\u002Fu.habr.com\u002Fya360_bt","colorType":"light"}},{"id":"story-1010_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F134\u002F446\u002F845\u002F13444684579c8b680cfd167f295f4ce5.png","button":{"title":"Узнать больше","link":"https:\u002F\u002Fu.habr.com\u002Fya360_bt","colorType":"light"}},{"id":"story-1010_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fdca\u002F342\u002F377\u002Fdca342377e6a97a9a441f8a7fa5d02d0.png","button":{"title":"Зарегистрироваться","link":"https:\u002F\u002Fu.habr.com\u002Fya360_bt","colorType":"light"}}]},{"id":"story-1008","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1c6\u002F28d\u002F606\u002F1c628d606b8e589fba1e6ca01058cc8d.png","title":"Хабр","link":null},"title":"ТОП годноты из блогов компаний","lang":"ru","startTime":"2025-04-03T10:46:00+03:00","finishTime":"2025-04-16T23:59:00+03:00","slides":[{"id":"story-1008_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F6e7\u002F050\u002F0fa\u002F6e70500fa39bdba7622e268a6552e93c.jpg","button":null},{"id":"story-1008_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1e5\u002Fd32\u002F302\u002F1e5d32302bd8b54307b9279f0b1ac233.jpg","button":{"title":"Обзор гаджета","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Ftimeweb\u002Farticles\u002F892116\u002F","colorType":"dark"}},{"id":"story-1008_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F5a2\u002F75d\u002F2b8\u002F5a275d2b88902ec1662e48fd2445273c.jpg","button":{"title":"Проще вручную","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Fruvds\u002Farticles\u002F894602\u002F","colorType":"dark"}},{"id":"story-1008_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F705\u002F17c\u002F73a\u002F70517c73a0b803c3e9daa9a6e81c913a.jpg","button":{"title":"Парусная история","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Falfa\u002Farticles\u002F889822\u002F","colorType":"dark"}},{"id":"story-1008_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Faf4\u002F80f\u002F79b\u002Faf480f79b4acae63cb4ba72a2cb9f77b.jpg","button":{"title":"Больше деталей","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Fselectel\u002Farticles\u002F887272\u002F","colorType":"light"}},{"id":"story-1008_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3bd\u002Fca9\u002F4c5\u002F3bdca94c5560068e50f11e267b1691c4.jpg","button":{"title":"Цитаты и мысли","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Fru_mts\u002Farticles\u002F891462\u002F","colorType":"light"}},{"id":"story-1008_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F953\u002Fc8e\u002F085\u002F953c8e08520500921c8f1991fdbee21d.jpg","button":{"title":"Мифы и реальность","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Fminerva_media\u002Farticles\u002F893792\u002F","colorType":"light"}},{"id":"story-1008_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F6ff\u002F528\u002F3b8\u002F6ff5283b8da568f92dfade7484b923b1.jpg","button":{"title":"Графики и диаграммы","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Ftbank\u002Farticles\u002F890658\u002F","colorType":"light"}}]},{"id":"story-1006","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F26b\u002F4ec\u002F115\u002F26b4ec115e7d731c3c373dc9193f1e90.png","title":"Хабр","link":null},"title":"Никому не верю","lang":"ru","startTime":"2025-04-01T16:00:00+03:00","finishTime":"2025-04-17T16:00:00+03:00","slides":[{"id":"story-1006_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe80\u002F292\u002Ff58\u002Fe80292f58fa625afba5822d6619399c0.jpg","button":null},{"id":"story-1006_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8df\u002Fe03\u002F88e\u002F8dfe0388ef06dc736da6d62f2092209c.jpg","button":{"title":"Тексты и фото","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F653053\u002F","colorType":"light"}},{"id":"story-1006_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F9ee\u002F90b\u002F85d\u002F9ee90b85d9a06c23a76e11086afc5e51.jpg","button":{"title":"Анамнез","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F877844\u002F","colorType":"light"}},{"id":"story-1006_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F9e2\u002F91f\u002F197\u002F9e291f1977394d7ed9fb75e893eda6d3.jpg","button":{"title":"Репозитории","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Fispmanager\u002Farticles\u002F725736\u002F","colorType":"light"}},{"id":"story-1006_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F858\u002F610\u002Fc34\u002F858610c343a371729872c7620bbfb3fc.jpg","button":{"title":"Весь список","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F844406\u002F","colorType":"light"}},{"id":"story-1006_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F78c\u002F43a\u002F00f\u002F78c43a00f73592e2d2ec85a45374e4e0.jpg","button":{"title":"Жизненные истории","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Fh3llo_cloud\u002Farticles\u002F888424\u002F","colorType":"light"}},{"id":"story-1006_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F7c4\u002Fac5\u002F2ce\u002F7c4ac52ce17fafb23cb81c3e64bead66.jpg","button":{"title":"Что изъяли?","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Fru_mts\u002Farticles\u002F857840\u002F","colorType":"light"}},{"id":"story-1006_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F812\u002F62e\u002Fef6\u002F81262eef6e55b9d931221e31316d8f1d.jpg","button":{"title":"Голодным не читать","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F717626\u002F","colorType":"dark"}}]},{"id":"story-996","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe63\u002F36d\u002Fa24\u002Fe6336da24460ab6b9fbc347d03eb263a.png","title":"Хабр","link":null},"title":"Здоровье айтишника","lang":"ru","startTime":"2025-03-17T10:22:00+03:00","finishTime":"2025-04-20T10:22:00+03:00","slides":[{"id":"story-996_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb7c\u002F6de\u002F8ea\u002Fb7c6de8ea6789dbc30f071716172b6dd.jpg","button":null},{"id":"story-996_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2e7\u002F88a\u002F0fe\u002F2e788a0fe61729ca8b23eb59069c844f.jpg","button":{"title":"Личный опыт","link":"https:\u002F\u002Fu.habr.com\u002Fzd-1","colorType":"light"}},{"id":"story-996_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb93\u002F6f4\u002F256\u002Fb936f425653b84fa60ab00d09f78c543.jpg","button":{"title":"Как это было","link":"https:\u002F\u002Fu.habr.com\u002Fzd-2","colorType":"light"}},{"id":"story-996_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc10\u002Fd14\u002Ff5a\u002Fc10d14f5a4859fe10baecbcc2bcb8828.jpg","button":{"title":"Шея в фокусе","link":"https:\u002F\u002Fu.habr.com\u002Fzd-3","colorType":"dark"}},{"id":"story-996_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F535\u002Fe1b\u002F77a\u002F535e1b77a9eb896262ad73321f2ad99f.jpg","button":{"title":"Фотоинструкция","link":"https:\u002F\u002Fu.habr.com\u002Fzd-4","colorType":"light"}},{"id":"story-996_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F569\u002Fc39\u002F49f\u002F569c3949f5b330ea85d4a1864f481c3d.jpg","button":{"title":"Сидите (не)правильно","link":"https:\u002F\u002Fu.habr.com\u002Fzd-5","colorType":"dark"}},{"id":"story-996_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1f2\u002F1de\u002Fdbf\u002F1f21dedbf2902bc4061a75b839b63595.jpg","button":{"title":"Журнал изменений","link":"https:\u002F\u002Fu.habr.com\u002Fzd-6","colorType":"dark"}},{"id":"story-996_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F95a\u002F164\u002F21b\u002F95a16421badc3a9f1135309ab0c42c41.jpg","button":{"title":"Альтернатива","link":"https:\u002F\u002Fu.habr.com\u002Fzd-7","colorType":"light"}},{"id":"story-996_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F624\u002F027\u002F54d\u002F62402754d311798af44bcfe7f9abfedc.jpg","button":{"title":"Хроника поисков","link":"https:\u002F\u002Fu.habr.com\u002Fzd-8","colorType":"dark"}}]},{"id":"story-982","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffac\u002F96a\u002F98a\u002Ffac96a98a938cf1193044e7f8ac0e3dd.png","title":"Хабр","link":null},"title":"IT с привкусом металла","lang":"ru","startTime":"2025-02-27T12:04:00+03:00","finishTime":"2025-04-13T12:04:00+03:00","slides":[{"id":"story-982_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F05e\u002Fac1\u002Fef9\u002F05eac1ef9669df65c450a6cbd3d39006.jpg","button":null},{"id":"story-982_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F821\u002F359\u002F132\u002F82135913240f094f22589260b889ac7f.jpg","button":{"title":"Реальные случаи","link":"https:\u002F\u002Fu.habr.com\u002Fzav_o1","colorType":"dark"}},{"id":"story-982_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F59a\u002Ff4d\u002F30b\u002F59af4d30b1106bf0c00ed5230e89be82.jpg","button":{"title":"Превозмогание","link":"https:\u002F\u002Fu.habr.com\u002Fzav_o2","colorType":"light"}},{"id":"story-982_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F5d6\u002Ff80\u002Fe4b\u002F5d6f80e4b2c2073b4f58b1cba22b0c04.jpg","button":{"title":"Что под капотом","link":"https:\u002F\u002Fu.habr.com\u002Fzav_o3","colorType":"dark"}},{"id":"story-982_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Faec\u002F4d0\u002F747\u002Faec4d07470e9371e700702c56fc38a2b.jpg","button":{"title":"Разгружаем вагоны","link":"https:\u002F\u002Fu.habr.com\u002Fzav_o4","colorType":"light"}},{"id":"story-982_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F449\u002F198\u002F078\u002F449198078c8dbd9a50fef55589c7f02b.jpg","button":{"title":"Фантастика?","link":"https:\u002F\u002Fu.habr.com\u002Fzav_o5","colorType":"dark"}},{"id":"story-982_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0f7\u002F442\u002F4d3\u002F0f74424d307527f70f663c55bd5cdc25.jpg","button":{"title":"Откровения","link":"https:\u002F\u002Fu.habr.com\u002Fzav_o6","colorType":"light"}},{"id":"story-982_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb72\u002F6a3\u002F82d\u002Fb726a382d93f4362f279304d71fdcdb9.jpg","button":{"title":"Пробы и ошибки","link":"https:\u002F\u002Fu.habr.com\u002Fzav_o7","colorType":"light"}}]}]},"technotext":{"years":[],"technotextDocForNominees":null,"technotextDocForWinners":null,"technotextInfo":{},"technotextInfoLoading":false,"technotextWinners":{},"technotextWinnersLoading":false},"userHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"userInvites":{"availableInvites":0,"usedInvitesIds":[],"usedInvitesRefs":{},"usedInvitesPagesCount":0,"unusedInvitesIds":[],"unusedInvitesRefs":{},"unusedInvitesPagesCount":0},"userVotes":{"karmaVotesList":[],"karmaVotesPagesCount":null,"karmaVotesListLoading":false,"commentsVotesList":[],"commentsVotesPagesCount":null,"commentsVotesListLoading":false,"postsVotesList":[],"postsVotesPagesCount":null,"postsVotesListLoading":false,"userVotesList":[],"userVotesPagesCount":null,"userVotesListLoading":false},"users":{"authorRefs":{},"authorIds":{},"pagesCount":{},"authorProfiles":{},"userHubs":{},"userInvitations":{},"authorFollowers":{},"authorFollowed":{},"userSpecialization":{},"karmaStats":[],"statistics":null,"isLoading":false,"authorFollowersLoading":false,"authorFollowedLoading":false,"userHubsLoading":false,"userInvitationsLoading":false,"route":{}},"viewport":{"prevScrollY":{},"scrollY":0,"width":0},"tracker":{"notificationsLoading":false,"notificationsList":[],"notificationsPageCount":0,"pendingMarkNotificationsRead":[],"publicationsLoading":true,"publicationsList":[],"publicationsPageCount":0,"pendingDeletePublications":false,"pendingMarkPublicationsRead":false},"events":{"eventRefs":{},"eventIds":[],"pagesCount":0,"categories":[],"cities":[],"actualEvents":null,"currentEvent":null,"eventsFilter":{"city":"all","timeStarted":null,"timeEnded":null}},"wysiwyg":{"WYSIWYGRulesRefs":null},"hint":{"hints":{}}};(function(){var s;(s=document.currentScript||document.scripts[document.scripts.length-1]).parentNode.removeChild(s);}()); window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)}; m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)}) (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym"); window.addEventListener('load', function () { setTimeout(() => { const img = new Image(); img.src = 'https://vk.com/rtrg?p=VK-RTRG-421343-57vKE'; }, 0); });