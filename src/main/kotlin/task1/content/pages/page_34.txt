Хабрβ Открыть список Как стать автором Моя лентаВсе потокиРазработкаАдминистрированиеДизайнМенеджментМаркетингНаучпоп Поиск Написать публикацию Настройки Войти Обновить Как стать автором Самое важноеНовые авторыОжидают приглашения Скопировать ссылку на RSS Egor767 3 часа назад В дверь постучали один раз. «ИТ-аудит», — догадался Штирлиц Время на прочтение6 мин IT-инфраструктура*Управление проектами*IT-стандарты*Системное администрирование* Из песочницы Меня зовут Егор Харченко, я руководитель направления по развитию инфраструктурных сервисов и учета активов в «Лаборатории Касперского». Наш отдел отвечает за инфраструктурные сервисы, которые помогают жить и работать сотрудникам компании: корпоративную почту, unified communications, наше внутреннее облако, печать, рабочее место, антивирусную защиту и так далее. Ну и, конечно, мы отвечаем за учет всех материальных и нематериальных активов. В статье я расскажу про наш опыт выстраивания взаимодействия с аудиторами, опишу паттерны ролевого поведения, а главное — объясню, как при этом извлечь максимальный профит для себя и своего отдела. Читать далее Рейтинг 0 Добавить в закладки4 Комментарии 0 ivankov_timofei 4 часа назад Как правильно выбрать базу данных для разработки: понимание моделей репликации Уровень сложностиСредний Время на прочтение38 мин SQL*PostgreSQL*NoSQL*MongoDB*Распределённые системы* Из песочницы Выбор подходящей системы управления базами данных (СУБД) — важнейшая задача при проектировании программных систем. Разработчики и архитекторы учитывают множество факторов: модель данных (реляционная или NoSQL), поддержку транзакций, масштабируемость, требования к согласованности и многого другое. Одним из ключевых архитектурных аспектов, влияющих на эффективность и надежность системы, является модель репликации данных. Репликация означает поддержание копий одних и тех же данных на нескольких узлах (серверах), соединённых по сети. Зачем это нужно? Репликация позволяет: во-первых, держать данные ближе к пользователям (уменьшая задержку при запросах); во-вторых, продолжать работу системы даже при сбое отдельных узлов (повышая доступность); в-третьих, масштабировать систему, увеличивая число узлов для обслуживания запросов на чтение (повышая пропускную способность). Однако реализация репликации сопряжена с серьёзными архитектурными компромиссами. Согласно теореме CAP, в распределённой системе невозможно одновременно гарантировать все три свойства: консистентность данных, доступность сервиса и устойчивость к разделению сети. При возникновении сетевых сбоев (разбиении на изолированные сегменты) системе приходится жертвовать либо мгновенной согласованностью данных, либо доступностью части узлов. Поэтому разные СУБД делают разные выборы в этих компромиссах. Архитектурная модель репликации, лежащая в основе СУБД, определяет, как база данных достигает (или не достигает) консистентности, доступности и отказоустойчивости. Понимание этих различий крайне важно для архитекторов и разработчиков: зная поведение репликации, вы сможете выбрать такую СУБД, которая лучше соответствует требованиям вашего проекта по масштабу, геораспределенности, допустимой задержке и устойчивости к сбоям. Читать далее Рейтинг 0 Добавить в закладки10 Комментарии 0 TachSkim 5 часов назад Как оценить труд системного администратора Уровень сложностиПростой Время на прочтение6 мин Системное администрирование*Читальный зал Из песочницы Проблема оценки труда системных администраторов — одна из самых неоднозначных в IT-менеджменте. В отличие от разработчиков или продакт-менеджеров, чей вклад можно измерить метриками, эффективность сисадмина часто остается «невидимой» — пока всё работает, кажется, что он и не нужен. Но когда возникают проблемы, его роль становится критически важной. Читать далее Всего голосов 1: ↑1 и ↓0 +1 Добавить в закладки9 Комментарии 11 Openminder 6 часов назад Небольшие заметки про модель памяти на примере RISC-V Уровень сложностиСложный Время на прочтение17 мин Программирование* Из песочницы Идея статьи родилась после прочтения многочисленных источников в интернете по барьерам и моделям памяти.Так же, был просмотрены соответствующие видео с разъяснением. Много где в целом всё достаточно хорошо разжевано. Статья не претендует на исчерпывающий материал. Скорее, это обзорное описание на тему модели памяти в связке с RISC-V. Не рассчитана на entry level, рекомендуется сперва почитать что нибудь вводное. Навряд ли кому то необходимо детальное знание внутренней архитектуры процессора на уровне RTL (register-transfer level), как и глубокого понимания принципов модели памяти, согласованности. Да и обычно вся эта информация берется из соответствующей литературе от производителя, других книгах по оптимизации. Предполагаю, что авторы в том или ином виде могу знать более глубокие вещи, чем представлены в открытых источниках. Возможно, они работали в компании производителя (Intel, например), общение, конференции, сообщества. Но может ли быть источник лучший, чем исходники CPU? Навряд ли. Вы не найдете в открытом доступе исходники процессоров Intel, AMD и любых других. ARM за это денежки получает, продавая права на архитектуру и готовые спроектированные блоки. А вот для RISC-V такой источник есть - исходники полноценного суперскалярного out-of-order процессора от Berkley. Не так давно был разработан язык Chisel на замену Verilog и аналогов. Он на базе Scala. А, так как это Scala, мы можем использовать IDE и внятную навигацию по исходникам. Но в исходники просто так не пойдешь, сперва надо приобрести необходимые фундаментальные знания, чтобы понимать в целом что такое разработка на уровне RTL. Неплохо бы разобраться с Verilog и с базовыми понятиями - всякие там защелки, регистры, мультиплексоры и тп. Это я и решил сделать и начал с книги “Паттерсон, Хеннесси: Архитектура компьютера и проектирование компьютерных систем”. Она безумно крутая и очень понятная. Затем прочитал несколько книг по FPGA и Verilog и даже купил учебную FPGA плату, но руки до неё так и не дошли. Это позволило сформировать для себя какую то необходимую картину того, как функционирует CPU, как происходит проектирование микроконтроллеров. Читать далее Всего голосов 6: ↑6 и ↓0 +8 Добавить в закладки13 Комментарии 0 Evgeniy_Korshunov 7 часов назад Жизнь в эпоху ИИ. Адаптируйся или вымри. Прогнозы и гипотезы Время на прочтение9 мин Исследования и прогнозы в IT*Искусственный интеллект Из песочницы Анализируя влияние ИИ на современное общество, можно провести аналогию с появлением огнестрельного оружия. Изначально оно не превосходило луки и арбалеты по дальности, скорости или пробивной силе. Однако его ключевое преимущество заключалось в экономической доступности. Огнестрел удешевил военное дело: солдат с трехмесячной подготовкой мог конкурировать с профессиональным воином, чьи навыки и экипировка требовали десятилетий тренировок и огромных затрат. Подобным образом сейчас ИИ трансформирует рынок труда, снижая зависимость от человеческого опыта и перераспределяя роли в профессиональной сфере. Читать далее Всего голосов 2: ↑1 и ↓1 +1 Добавить в закладки6 Комментарии 4 Artamonovkim 9 часов назад Моделирование с верификацией междоменных теорем на языке Lean Уровень сложностиСредний Время на прочтение9 мин Анализ и проектирование систем* Из песочницы Традиционный подход к разработке программных продуктов и бизнес-решений обычно фокусируется прежде всего на конечном результате: формальных моделях, спецификациях или непосредственно коде. Однако такой подход зачастую упускает из виду очень важный аспект: процесс рассуждений, которые привели к этим формальным структурам. Каждая формальная структура — это лишь вершина айсберга. Под поверхностью скрываются многочисленные рассуждения, гипотезы и промежуточные описания различной степени формальности. Например, прежде чем прийти к чёткой структуре данных или бизнес-плана, мы обычно проходим путь от неформального наброска идеи, через промежуточные уровни формализации, постепенно уточняя наше понимание и спецификации. Читать далее Всего голосов 2: ↑0 и ↓2 -2 Добавить в закладки0 Комментарии 2 imalostshe 10 часов назад Как я написал удобного Telegram-бота для взаимодействия со школьным дневником Уровень сложностиПростой Время на прочтение2 мин Python*API*Git*GitHub*Open source* Из песочницы Когда я начал свой путь в парсинге, мне в голову сразу пришла идея написать клиент для удобного взаимодейстия со школьным дневником. В последствии я решил оформить его в виде Telegram-бота. ... Читать далее Всего голосов 12: ↑11 и ↓1 +10 Добавить в закладки27 Комментарии 5 antichaos вчера в 17:15 Практический GrapheneOS для параноиков Уровень сложностиСредний Время на прочтение49 мин Аналитика мобильных приложений*Резервное копирование*Разработка мобильных приложений* Из песочницы Перевод GrapheneOS — это операционная система с открытым исходным кодом (FOSS), основанная на проекте Android Open Source Project (AOSP), которая в первую очередь сосредоточена на улучшении конфиденциальности и безопасности. Хотя мы все хотели бы иметь наилучшую безопасность и конфиденциальность, к сожалению, такие улучшения редко приходят без потерь в удобстве и простоте использования. В этой статье мы рассмотрим, как максимально использовать улучшения Graphene и как эти меры влияют на пользовательский опыт, предлагая практические решения. Эта статья является попыткой объединить информацию и знания о мобильной безопасности и конфиденциальности в рамках проекта GrapheneOS. Читать далее Всего голосов 3: ↑3 и ↓0 +4 Добавить в закладки12 Комментарии 0 AnthonyKharin вчера в 16:16 Автоматизация версионирования в Kotlin Multiplatform: Решение для Android и iOS Уровень сложностиСредний Время на прочтение5 мин Kotlin*Разработка под Android*Разработка под iOS*Jetpack Compose*Gradle* Из песочницы Привет, Хабр! В этой статье я делюсь решением, как настроить версионирование приложения для Android и iOS с помощью Kotlin Multiplatform. Я рассказываю о том, как минимизировать человеческий фактор, автоматизировав процесс обновления версий, и как избежать дублирования информации в разных частях проекта. В статье представлен пример кода, который можно адаптировать под свой проект. Читать далее Всего голосов 3: ↑3 и ↓0 +3 Добавить в закладки8 Комментарии 0 bos1988 вчера в 15:16 Экономия RAM с pandas.read_sql Уровень сложностиПростой Время на прочтение6 мин Python*SQL*Сжатие данных* Из песочницы Как экономить до 90% оперативной памяти при загрузке pandas DataFrame из базы данных? Сравним различные способы выгрузки данных и найдем метод для снижения потребления оперативной памяти. Читать далее Рейтинг 0 Добавить в закладки11 Комментарии 2 alrn вчера в 14:16 Удобное сканирование в структуры в связке Go/PgX. Решение проблемы сканирования в PgX. Golang Уровень сложностиПростой Время на прочтение3 мин Go*PostgreSQL*GitHub*Open source* Из песочницы Go. PgxWrappy как решение всех проблем PgX. Если вы сталкивались с неудобным сканом в структуры посредством PgX на Go, то гляньте эту либу. Она решает все проблемы сканинга. Читать далее Рейтинг 0 Добавить в закладки6 Комментарии 9 dergunovs вчера в 14:16 Календарь тренировок — когда пет-проект чуть больше to-do листа Уровень сложностиПростой Время на прочтение3 мин VueJS*TypeScript*Разработка мобильных приложений*Node.JS*JavaScript* Из песочницы В декабре 2023 я впервые задумался о похудении. Тогда при росте 194 см я весил 116 кг. Раньше я только играл в мини-футбол, вообще не следил за едой и даже не заглядывал в спортзал. Начал нормально питаться, поменял привычки, добавил силовые тренировки, к сентябрю 2024 скинул около 30 кг. Это был рекорд по минимальному весу. Сейчас, через полгода, вешу 89 кг. Оказалось, что нарастить мышцы намного труднее, чем избавиться от жира. Надеюсь, что эти +3 кг в основном мышцы. Почему так: теперь могу подтянуться 11 раз вместо 9, и на фото видны изменения — делаю такие сравнения каждые пару месяцев. Читать далее Всего голосов 2: ↑2 и ↓0 +2 Добавить в закладки17 Комментарии 3 Cheese3634 вчера в 14:16 Мой опыт настройки SSO OpenID Connect в 1С с помощью Authentik Уровень сложностиСредний Время на прочтение6 мин Информационная безопасность*1С* Из песочницы При внедрении единой системы аутентификации в компании я столкнулся с задачей организовать SSO-доступ к 1С через протокол OpenID Connect. За основу я взял статью на InfoStart (https://infostart.ru/1c/articles/1538390/), однако в качестве провайдера аутентификации использовал не Keycloak, как в оригинале, а Authentik — современную и удобную альтернативу с простым UI и богатым функционалом. Читать далее Всего голосов 3: ↑3 и ↓0 +3 Добавить в закладки10 Комментарии 1 Quantum-Loa вчера в 13:34 Квантовые компьютеры для всех: уже здесь и сейчас или грядущее науки? Уровень сложностиПростой Время на прочтение13 мин Квантовые технологииКомпьютерное железоНастольные компьютерыНаучная фантастикаНаучно-популярное Из песочницы Реально существующие, работающие квантовые компьютеры, их технические характеристики, перспективы и возможности Интересно, как и где мы сейчас можем использовать квантовое железо? Оказывается, что можем! Оказывается всё обстоит гораздо лучше, чем казалось бы. Будущее уже здесь. Читать интересный обзор Всего голосов 4: ↑2 и ↓2 +2 Добавить в закладки7 Комментарии 2 ant_sol вчера в 13:16 Self-Service ETL vs Power Query: чем отличаются загрузчики Visiology и Power BI Уровень сложностиПростой Время на прочтение7 мин Визуализация данных*Microsoft Azure*Data Engineering* Из песочницы Вопрос, чем заменить Power BI, стал актуален для многих пользователей одной из самых популярных BI-платформ. С точки зрения синтаксиса DAX и удобства работы с моделью данных наиболее очевидной альтернативой является Visiology. Но у этой платформы до недавнего времени не было своего ETL-инструментария. Недавно вендор представил свой Self-Service ETL, и у меня возник логичный профессиональный интерес к его тестированию. В этой статье я делюсь своими исследованиями возможностей SS ETL от Visiology по сравнению с Power Query. Читать далее Всего голосов 11: ↑11 и ↓0 +13 Добавить в закладки4 Комментарии 1 Mishabox вчера в 12:15 Сравниваем российский VS европейский DevOps и выясняем, что у них общего Уровень сложностиПростой Время на прочтение4 мин DevOps* Из песочницы DevOps 一 универсальная методология, но не будем отрицать, что в разных странах она развивалась со своими особенностями. В частности, подходы в России и Европе имеют очень характерные отличительные черты. Если вы задумываетесь над релокацией или эмплойментом в иностранную компанию, то с ними лучше познакомиться заранее. Приветствую! Меня зовут Михаил Коробка, и сегодня я как раз расскажу об особенностях DevOps в России и Европе, на что стоит обратить внимание, а что 一 общее и будет понятно спецам из любой части света. Читать далее Всего голосов 6: ↑2 и ↓4 -2 Добавить в закладки5 Комментарии 4 DMS_13 вчера в 11:16 Почему я использую doc-as-a-code Уровень сложностиСредний Время на прочтение12 мин Анализ и проектирование систем*Подготовка технической документации* Из песочницы В этой статье я постараюсь рассказать и показать, почему я использую подход doc-as-a-code, как помогает git системному аналитику и зачем это всё. Читать далее Всего голосов 10: ↑10 и ↓0 +11 Добавить в закладки61 Комментарии 11 mswindu вчера в 10:16 Реализация RPC во внутреннем взаимодействии модулей с Spring Boot Уровень сложностиСредний Время на прочтение15 мин Программирование*Java* Из песочницы В какой-то момент я настолько устал настраивать все эти мелочи для REST-взаимодействия в микросервисах, что реализовал механизм, который сильно упрощает эту работу. И я уверен, что вам стоит прочитать эту статью, если: Вы используете Java и Spring Boot в своей работе. Ваш проект строится на микросервисной архитектуре. Вас раздражает бесконечное описание REST-контрактов и их поддержку. А если у вас остались шрамы после попыток внедрения gRPC, то тем более рекомендую дочитать до конца. В статье мы рассмотрим альтернативный подход к взаимодействию между сервисами — легковесное RPC-решение, которое удобно использовать внутри одного продукта. Оно не претендует на замену публичных API, но значительно упрощает жизнь внутри команды, где "правила игры" можно обсудить за кружкой пива. Читать далее Всего голосов 1: ↑0 и ↓1 -1 Добавить в закладки12 Комментарии 5 Azr4el вчера в 09:16 Как я заработал первый миллион за год с нуля в геймдеве, продавая ассеты на UE Marketplace Уровень сложностиПростой Время на прочтение3 мин Unreal Engine* Из песочницы Привет! Меня зовут Хамзат. Я хочу поделиться своей историей, успехами и планами на будущее касаемо разработки игровых ассетов и самих игр в целом. Читать далее Всего голосов 39: ↑34 и ↓5 +35 Добавить в закладки64 Комментарии 41 daniilmaibe вчера в 00:19 Большие языковые модели как инструмент для анализа технической документации и решения ИТ-инцидентов Уровень сложностиПростой Время на прочтение5 мин Машинное обучение* Из песочницы Любой инженер, сталкивавшийся с инцидентами в ИТ-системах, знает: решение часто есть в документации. Проблема в том, что найти его — как искать иголку в стоге сена. Документация объёмная, разрозненная, специфичная и написана далеко не всегда для людей. Время идёт, SLA поджимает. Но что если бы у нас был помощник, который мгновенно читал бы всю документацию, понимал бы контекст сбоя и предлагал конкретные рекомендации? Сегодня это возможно — благодаря большим языковым моделям (LLM), таким как GPT-4, Claude, Gemini и другим. В этой статье я расскажу, как использовать LLM для анализа технической документации и выдачи рекомендаций по устранению инцидентов. Спойлер: это работает. Особенно в случаях, когда документация специфичная, локальная и больше нигде в интернете не встречается. Читать далее Всего голосов 3: ↑2 и ↓1 +3 Добавить в закладки17 Комментарии 9 Назад Сюда 1 23 ... 4950Туда Назад Новые авторы В этом разделе находятся дебютные публикации тех пользователей, которые ещё недавно могли только читать и писать комментарии. Наверняка вам тоже есть чем поделиться с читателями Хабра, а написать первую публикацию не так уж и страшно. Тем более, у нас есть рекомендации и мы готовы помочь. Ваш аккаунт Войти Регистрация Разделы Статьи Новости Хабы Компании Авторы Песочница Информация Устройство сайта Для авторов Для компаний Документы Соглашение Конфиденциальность Услуги Корпоративный блог Медийная реклама Нативные проекты Образовательные программы Стартапам Facebook Twitter VK Telegram Youtube Яндекс Дзен Настройка языкаТехническая поддержка © 2006–2025, Habr