Хабрβ Открыть список Как стать автором Моя лентаВсе потокиРазработкаАдминистрированиеДизайнМенеджментМаркетингНаучпоп Поиск Написать публикацию Настройки Войти Обновить 44.8 Рейтинг Подписаться Node.JS * Среда для запуска JavaScript-приложений СтатьиПостыНовостиАвторыКомпании Все подряд Открыть список Скопировать ссылку на RSS Сначала показывать Новые Лучшие Порог рейтинга Все ≥0 ≥10 ≥25 ≥50 ≥100 Уровень сложности Все Простой Средний СложныйПрименить dergunovs вчера в 14:16 Календарь тренировок — когда пет-проект чуть больше to-do листа Уровень сложностиПростой Время на прочтение3 мин Количество просмотров 1.1K VueJS*TypeScript*Разработка мобильных приложений*Node.JS*JavaScript* Из песочницы В декабре 2023 я впервые задумался о похудении. Тогда при росте 194 см я весил 116 кг. Раньше я только играл в мини-футбол, вообще не следил за едой и даже не заглядывал в спортзал. Начал нормально питаться, поменял привычки, добавил силовые тренировки, к сентябрю 2024 скинул около 30 кг. Это был рекорд по минимальному весу. Сейчас, через полгода, вешу 89 кг. Оказалось, что нарастить мышцы намного труднее, чем избавиться от жира. Надеюсь, что эти +3 кг в основном мышцы. Почему так: теперь могу подтянуться 11 раз вместо 9, и на фото видны изменения — делаю такие сравнения каждые пару месяцев. Читать далее Всего голосов 2: ↑2 и ↓0 +2 Добавить в закладки17 Комментарии 3 Новости все подрядлучшие Все новости SSranked 27 мар в 00:40 Как 9.3 уязвимость ждала открытия 3 года Уровень сложностиСредний Время на прочтение7 мин Количество просмотров 4.1K JavaScript*Open source*Node.JS* Перевод В крупнейшем JavaScript фреймворке, Next.js, была найдена критическая уязвимость 9.3/10, на исправление которой Vercel потребовалось 13 дней. Читать далее Всего голосов 13: ↑13 и ↓0 +18 Добавить в закладки12 Комментарии 0 fozery 26 мар в 17:16 Разбираем Pino: как работает самый быстрый логер для Node.js Уровень сложностиСредний Время на прочтение19 мин Количество просмотров 3.7K Node.JS*JavaScript*TypeScript*Веб-разработка* Из песочницы Pino — один из самых быстрых логгеров для Node.js, но как он устроен внутри? В этой статье мы углубимся в низкоуровневые механизмы: разберём, как работают транспорты, чем отличается multistream от pipeline, и как настроить логирование без потери производительности. Вы узнаете, как использовать child loggers, маскировать данные с redact и избегать типичных проблем. Этот материал для тех, кто хочет понять Pino на фундаментальном уровне и применять его с максимальной эффективностью. Читать далее Всего голосов 7: ↑7 и ↓0 +9 Добавить в закладки29 Комментарии 8 ppr0ger 26 мар в 09:15 Мышление за пределами кода: почему я написал книгу, которой мне самому не хватало Уровень сложностиПростой Время на прочтение2 мин Количество просмотров 1.9K JavaScript*Node.JS*Разработка под Linux*Разработка под macOS*Разработка под Windows* Из песочницы Привет, меня зовут Андрей, и я написал книгу. Нет, не о синтаксисе и не про очередной набор «лучших практик». А о том, что часто остаётся за кадром — в рефлексии, в мыслях после проектов, в спорах между «пишем быстро» и «делаем правильно». Читать далее Всего голосов 13: ↑13 и ↓0 +19 Добавить в закладки23 Комментарии 16 Истории MaxRokatansky 24 мар в 17:42 16 NPM-пакетов, о которых должен знать каждый Node.js-разработчик Уровень сложностиПростой Время на прочтение19 мин Количество просмотров 7.1K Блог компании OTUSJavaScript*Node.JS*Программирование* Перевод В этой статье мы рассмотрим 16 обязательных для любого Node.js‑разработчика NPM‑пакетов. Мы подробно расскажем о них, включая их ключевые особенности, как их установить и как именно вы можете использовать их в своих проектах для улучшения ваших рабочих процессов. Читать далее Всего голосов 16: ↑8 и ↓8 +2 Добавить в закладки45 Комментарии 17 Markus_automation 23 мар в 21:42 Топ парсеров и API-сервисов сбора данных: сравнение скорости, масштабируемости и обхода защит — парсеры на максималках Уровень сложностиПростой Время на прочтение23 мин Количество просмотров 8.1K Python*Node.JS*Облачные сервисы* Обзор Автоматический сбор данных (парсинг, или web scraping) стал неотъемлемой практикой для разработчиков, аналитиков и автоматизаторов. С его помощью получают массовую информацию с сайтов – от цен конкурентов и отзывов до контента соцсетей. Для этого разработано множество “парсеров” – библиотек, фреймворков и облачных сервисов, которые позволяют извлекать веб-данные программно. Одни решения требуются для быстрого парсинга статичных страниц, другие – для обхода сложной JavaScript-навигации, третьи – для получения данных через API. В этой статье я рассмотрю топ инструментов для парсинга – как открытых (Open Source) библиотек, так и коммерческих SaaS/API-сервисов – и сравню их по ключевым метрикам. Читать далее Всего голосов 24: ↑24 и ↓0 +26 Добавить в закладки126 Комментарии 32 WhileTrueDoEnd 21 мар в 00:25 От идеи до деплоя: как поднять приложение на Cloudflare Workers Уровень сложностиСредний Время на прочтение4 мин Количество просмотров 2K Облачные вычисления*Облачные сервисы*Node.JS*JavaScript* Туториал В предыдущей статье мы обсудили плюсы и минусы использования воркеров для cloud-native разработки. Сегодня же мы настроим и задеплоим полноценное приложение с фронтом, бэком, базой данных, горизонтальным мастшабированием, http/3, капчей и бесплатным поддоменом менее, чем за час. Итоговый результат можно увидеть тут (только через VPN). Читать далее Всего голосов 3: ↑3 и ↓0 +5 Добавить в закладки13 Комментарии 0 supercat1337 20 мар в 12:48 DOM-Scope: создание искусственных областей видимости и управление идентификаторами элементов Уровень сложностиСредний Время на прочтение5 мин Количество просмотров 427 JavaScript*Node.JS*Open source*Веб-разработка* В процессе работы с HTML-документами часто возникает необходимость получить доступ к конкретным элементам DOM. Обычно это делается с помощью уникальных идентификаторов, которые присваиваются нужным элементам. Однако существует вероятность, что в большом документе может оказаться несколько элементов с одинаковыми идентификаторами, что может привести к путанице. Чтобы избежать этой проблемы, я разработал библиотеку dom-scope, которая позволяет создавать искусственные области видимости (скоупы) внутри DOM. Я хочу поделиться своим решением с сообществом Хабра. Читать далее Рейтинг 0 Добавить в закладки6 Комментарии 8 i360u 17 мар в 20:45 Дзен и публикация картинок Уровень сложностиПростой Время на прочтение7 мин Количество просмотров 936 HTML*Веб-разработка*JavaScript*БраузерыNode.JS* Кейс Привет, Хабр! Сегодня я хотел бы поговорить с тобой о проблеме публикации картинок. Зачем вообще об этом говорить? Ежедневно миллионы людей публикуют миллионы, или даже, миллиарды изображений, что тут можно обсуждать? Наверняка, для веб-разработчика, тем более, опытного - это вообще никакая не проблема. Эх, как бы не так. Всего голосов 10: ↑10 и ↓0 +11 Добавить в закладки13 Комментарии 0 mkant 14 мар в 14:45 Переходим с Node.js на Go… но это не точно Уровень сложностиСредний Время на прочтение7 мин Количество просмотров 10K API*Node.JS*Go* Мнение Создатель Node.js Райан Даль в одном из своих интервью заявил, что для написания серверов предпочёл бы Go. Это интервью состоялось в 2017 году, с тех пор Райан переходил на Rust, даже написал на нём еще одну среду для выполнения серверного JS – Denо. Но джин уже выпущен из бутылки. Стали даже появляться заявления о скорой кончине Node.js. Фразу продолжают вспоминать в спорах по сей день, и сейчас можно увидеть статьи о переходе с Ноды на Голанг. Мне же представляется, что вопрос о переходе между этими двумя технологиями едва ли стоит – эти решения для разных ниш. Прикладные API-сервера, для которых чаще всего используют Ноду устроены таким образом, что получить выигрыш производительности переходом на Go довольно трудно, а вот замедлить разработку очень легко. Почему так и где лучше Go. Далее Всего голосов 18: ↑14 и ↓4 +10 Добавить в закладки36 Комментарии 77 Webest 13 мар в 11:25 Пошаговое руководство для начинающих по разработке SPA на Laravel и Vue.js Уровень сложностиПростой Время на прочтение9 мин Количество просмотров 4.3K Node.JS*PHP*VueJS*Laravel*Веб-разработка* Туториал Привет, Хабр. На связи Артем, Laravel-разработчик, и я написал инструкцию для начинающих разработчиков по созданию полноценного локального приложения с бэкендом на Laravel и фронтендом на Vue.js. Одностраничные приложения стали стандартом для создания динамичных и быстрых пользовательских интерфейсов. Одним из популярных стеков для разработки SPA является сочетание Laravel и Vue.js. Пошагово разберу, как настроить среду разработки, создать API на Laravel, реализовать динамический интерфейс с использованием Vue.js и связать эти две части в единое приложение. После прочтения статьи вы сможете развернуть свое собственное SPA и использовать его как основу для реализации своих идей по функционалу. Этот пример станет отличной отправной точкой для создания более сложных проектов. Читать далее Всего голосов 9: ↑9 и ↓0 +11 Добавить в закладки48 Комментарии 11 Kirill_Dan 12 мар в 17:11 Обновление SPA приложения в браузере пользователя Node/React Время на прочтение13 мин Количество просмотров 1.8K JavaScript*Node.JS*ReactJS*Алгоритмы*Веб-разработка* Туториал Всем привет. Мне читатели иногда присылают сообщения с одним и тем же вопросом, что ты же Software Engineer и Solution Architect, но почти все твои статьи касаются бизнеса, менеджмента, процессов, управления командами и так далее. Но нет статей технического характера, про разработку и создание разных фич (feature) для проекта. Причина по которой это происходит в том, что весь интернет забит информацией о том, как программировать, но очень мало информации о том, что именно программировать, и о том, что за пределами кодинга огромное количество нерешенных проблем, которые нивелируют весь процесс программирования. Но сегодня я расскажу об одной фиче, которая может оказаться очень полезной для многих. Читать далее Всего голосов 4: ↑2 и ↓2 0 Добавить в закладки12 Комментарии 26 atotmakov 12 мар в 17:05 InnerSource-хакатон: делимся результатами соревнования между командами VK Tech Уровень сложностиСредний Время на прочтение8 мин Количество просмотров 947 Блог компании VK TechБлог компании VKTarantool*Node.JS*Хакатоны Кейс Привет, Хабр! В конце 2024 года прошел большой внутренний хакатон для команды разработки VK Tech. Такое мероприятие провели впервые: команды разных продуктов объединили в единое направление RnD всего год назад. И вот теперь, когда мероприятие прошло, а полученный опыт осмыслен и усвоен, мы хотим во всех деталях рассказать о том, как это было. Читать далее Всего голосов 25: ↑25 и ↓0 +33 Добавить в закладки7 Комментарии 0 Ближайшие события 31 марта Серия вебинаров «DevOps Middle: AvitoTech vs ecom.tech» Онлайн Больше событий в календаре Разработка Администрирование 3 апреля Реалити для разработчиков: узнайте, как строится новое публичное облако MWS Онлайн Больше событий в календаре Разработка 3 апреля Открытая встреча «System Analysis Meetup SberHealth» Москва • Онлайн Больше событий в календаре Аналитика 4 – 5 апреля Геймтон «DatsCity» Онлайн Больше событий в календаре Разработка 8 апреля Конференция TEAMLY WORK MANAGEMENT 2025 Москва • Онлайн Больше событий в календаре Менеджмент Другое 10 апреля «GoCloud 2025» — масштабная IT-конференция про облака и AI Москва • Онлайн Больше событий в календаре Разработка Администрирование Менеджмент 15 – 16 апреля Форум «Российская неделя ЦОД»: конференции «В Облаке.РФ» и TechDay Москва • Онлайн Больше событий в календаре Разработка Менеджмент Другое 17 – 19 апреля Курс: «Клиентские данные в энтерпрайзе» Москва Больше событий в календаре Аналитика Тестирование Другое 25 – 26 апреля IT-конференция Merge Tatarstan 2025 Казань Больше событий в календаре Разработка Маркетинг Другое 25 апреля Кейс-конференция «Клиника на миллиард: лидеры делятся опытом построения клиник» Москва • Онлайн Больше событий в календаре Менеджмент Другое 20 – 22 июня Летняя айти-тусовка Summer Merge Ульяновская область Больше событий в календаре Разработка Другое Влево Вправо JastaFly 12 мар в 12:48 Node.js — асинхронность по умолчанию Уровень сложностиПростой Время на прочтение4 мин Количество просмотров 3.8K JavaScript*Node.JS* Обзор Recovery Mode Возможно Вам доводилось слышать о том что Node.js идеален для создания веб-серверов. В этой статье я объясню, почему оно так и какие архитектурные принципы заложенные в основу серверного JavaScript, делают его таким подходящим для приложений с высокой интенсивностью ввода/вывода. Узнать почему? Всего голосов 2: ↑1 и ↓1 0 Добавить в закладки28 Комментарии 46 badcasedaily1 6 мар в 22:02 N-API: аддоны для Node.js Уровень сложностиПростой Время на прочтение7 мин Количество просмотров 1.5K Блог компании OTUSNode.JS*C++*JavaScript*Программирование* Обзор Привет, Хабр! В этой статье рассмотрим то, как создаются нативные аддоны для Node.js на C++ с использованием N-API. До появленияN‑API написание аддонов шло напрямую через V8 API, что влекло за собой жёсткую привязку к конкретной версии движка. Каждый апдейт Node.js требовал пересборки и правки кучи низкоуровневого кода. N‑API решает эту проблему, предоставляя стабильный ABI. Это позволяет писать универсальные, долговечные и, главное, поддерживаемые модули, не боясь, что обновление Node.js подбросит вам сюрприз в виде «segmentation fault». Читать далее Всего голосов 10: ↑8 и ↓2 +9 Добавить в закладки17 Комментарии 2 eozubarev 6 мар в 08:40 Он вам не SSR. Nuxt — больше, чем Server-Side Render фреймворк Уровень сложностиСредний Время на прочтение5 мин Количество просмотров 4.8K VueJS*Node.JS*JavaScript*NestJS*TypeScript* Из песочницы Привет, Хабр! Я - Frontend Developer в МТС Диджитал. Все чаще и чаще я натыкаюсь на сообщения и комментарии пользователей в различных социальных сетях про Server-Side Rendering. Обычно эти жалобы о том, кто-то недоволен зависимостью Next.js от Node.js-сервера. Кто-то сталкивается с ограничениями динамического роутинга при статической генерации. Исходя из этого некоторые люди писали в комментариях что-то вроде: "Вы же не ожидали, что SSR-фреймворк решит все проблемы разом?" Большинство моих коллег с других компаний в принципе не понимают зачем я беру Nuxt почти во все свои проекты и задают вопросы. На первый взгляд это вполне логично. Какой смысл брать SSR фреймворк, если ты выключаешь в нем SSR. На примере Nuxt, SSR можно выключить одним булевым флагом в конфиге: Читать далее Всего голосов 6: ↑6 и ↓0 +7 Добавить в закладки26 Комментарии 22 m_bessarab 3 мар в 17:15 Заметки по grammY Уровень сложностиПростой Время на прочтение5 мин Количество просмотров 897 JavaScript*Node.JS* Из песочницы Я работаю бэкенд-инженером на Scala, и иногда пишу свои пет-прожекты с экспериментами, которые зачастую никуда не уходили. Но в этот раз я решил поделиться своим опытом. Недавно мне пришла идея написать телеграмм бота для общения за определенную плату. Я погуглил подобные сервисы, и да, это уже реализовано на некоторых площадках, но мало кто активно этим пользуется. Читать далее Всего голосов 2: ↑2 и ↓0 +2 Добавить в закладки9 Комментарии 1 empenoso 1 мар в 03:25 Лучшие статьи Хабра в феврале 2025 года Уровень сложностиПростой Время на прочтение11 мин Количество просмотров 3K Open source*API*Node.JS*Python* Дайджест В прошлом месяце я уже анализировал самые популярные статьи Хабра за январь, чтобы узнать что вообще происходит в мире. Теперь пришло время посмотреть, изменилась ли картина в феврале. Какие темы остались актуальными, а какие ушли в тень? Давайте разберёмся, чем жил Хабр в феврале 2025 года. Парсим и анализируем 🤖 Всего голосов 27: ↑21 и ↓6 +34 Добавить в закладки26 Комментарии 13 MGorkov 21 фев в 09:03 IPC в Node.js: решение проблемы с передачей данных Уровень сложностиСредний Время на прочтение6 мин Количество просмотров 1.7K Блог компании ТензорNode.JS*Высокая производительность* Кейс В Node.js IPC (Inter-Process Communication) - это механизм, используемый для обмена данными между процессами. Начиная с версии 12.16.0 в модуле child_processes появилась поддержка режима advanced serialization для IPC. Однако иногда он может привести к проблемам с зависанием сообщений, что приводит к ошибкам и проблемам с функциональностью. В этой статье мы расскажем как решили эту проблему. Читать далее Всего голосов 11: ↑11 и ↓0 +12 Добавить в закладки14 Комментарии 1 kirBurkhanov 10 фев в 09:29 Backend-for-Frontend (BFF): решение проблемы взаимодействия фронтенда и бэкенда Уровень сложностиСредний Время на прочтение3 мин Количество просмотров 8.2K JavaScript*Node.JS*API*Веб-разработка* Мнение В современной разработке веб-приложений одной из ключевых проблем является несовместимость между фронтендом и бэкендом. Фронтенд-команды часто вынуждены ждать, пока бэкенд предоставит необходимые API, а бэкенд-разработчики тратят время на адаптацию логики под изменения в интерфейсе. Это приводит к задержкам в разработке, сложностям в тестировании и постоянным несоответствиям в данных. Что такое Backend-for-Frontend (BFF)? Backend-for-Frontend (BFF) — это архитектурный паттерн, который помогает устранить разрыв между фронтендом и бэкендом. BFF выступает промежуточным слоем, который адаптирует данные и логику бэкенда под нужды конкретного фронтенда. Это позволяет фронтенд-командам работать с API сразу, а бэкенд-разработчикам подключать логику по мере готовности, что значительно ускоряет процесс разработки и снижает количество доработок. Читать далее Всего голосов 6: ↑4 и ↓2 +3 Добавить в закладки48 Комментарии 6 Назад Сюда 1 23 ... 9091Туда Назад Работа JavaScript разработчик 130 вакансий Node.js разработчик 47 вакансий Все вакансии Ваш аккаунт Войти Регистрация Разделы Статьи Новости Хабы Компании Авторы Песочница Информация Устройство сайта Для авторов Для компаний Документы Соглашение Конфиденциальность Услуги Корпоративный блог Медийная реклама Нативные проекты Образовательные программы Стартапам Facebook Twitter VK Telegram Youtube Яндекс Дзен Настройка языкаТехническая поддержка © 2006–2025, Habr