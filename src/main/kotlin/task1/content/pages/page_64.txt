Хабрβ Открыть список Как стать автором Моя лентаВсе потокиРазработкаАдминистрированиеДизайнМенеджментМаркетингНаучпоп Поиск Написать публикацию Настройки Войти Обновить 381.99 Рейтинг Подписаться Алгоритмы * Все об алгоритмах СтатьиПостыНовостиАвторыКомпании Все подряд Открыть список Скопировать ссылку на RSS Сначала показывать Новые Лучшие Порог рейтинга Все ≥0 ≥10 ≥25 ≥50 ≥100 Уровень сложности Все Простой Средний СложныйПрименить PRGarda вчера в 15:06 Алгоритмы поиска аномалий HBOS и ECOD Уровень сложностиСредний Время на прочтение9 мин Количество просмотров 562 Блог компании Группа компаний «Гарда»Машинное обучение*Алгоритмы*Информационная безопасность* Специалистам по машинному обучению часто приходится заниматься поиском аномалий в данных, однако в русскоязычном интернете этой задаче посвящено очень мало материалов. В частности, нет хороших разборов различных алгоритмов поиска аномалий, где были бы описаны их плюсы и минусы. В этой статье частично исправим этот недочет и разберем алгоритмы HBOS и ECOD, а также обсудим особенности их реализации в популярной библиотеке PyOD. Читать далее Всего голосов 4: ↑4 и ↓0 +7 Добавить в закладки9 Комментарии 0 Новости все подрядлучшие Все новости shirokova_ea 26 мар в 16:51 Применение ML Pricing в ритейле: хвост виляет собакой Время на прочтение6 мин Количество просмотров 794 Блог компании Lenta TechИскусственный интеллектМашинное обучение*Алгоритмы*Big Data* Кейс Привет, Habr! Мы Катя и Оля, продакт-менеджеры BigData в компании «Лента», отвечаем за развитие цифровых продуктов блоков «Ассортимент» и «Ценообразование». В этой статье расскажем про внедрение ML-модели и алгоритма ценообразования товаров «хвоста», а также - трудности, с которыми столкнулись. Читать далее Всего голосов 6: ↑4 и ↓2 +4 Добавить в закладки11 Комментарии 2 NIC-CT 25 мар в 14:32 Закрытие уязвимости Spectre в режиме безопасных вычислений на Эльбрусе Уровень сложностиСредний Время на прочтение9 мин Количество просмотров 2K Блог компании ООО НИЦ ЦТИнформационная безопасность*ПроцессорыАлгоритмы* Обзор Приветствуем! Уязвимость Spectre обнаружили ещё в 2017 году. С тех пор разработчики Intel, AMD и ARM пытаются её закрыть программными средствами. Пока не очень удачно — программные заплатки не защищают полностью, а производительность процессоров снижается. Разберемся, есть ли уязвимость Spectre на российских процессорах Эльбрус и что с ней делать. Читать далее Всего голосов 13: ↑12 и ↓1 +17 Добавить в закладки12 Комментарии 16 OyminiRole1776 25 мар в 10:23 работа с Kafka в Go: практическое применение Уровень сложностиСредний Время на прочтение10 мин Количество просмотров 2.3K Apache*API*Go*IT-стандарты*Алгоритмы* Туториал Recovery Mode Автор статьи Якушков Федор. Apache Kafka — это мощная распределённая платформа для обработки потоков данных, которая завоевала популярность благодаря своей способности эффективно управлять большими объёмами информации в реальном времени. В этой статье мы подробно разберём, как использовать Kafka в языке программирования Go с помощью библиотеки kafka-go. Мы рассмотрим все ключевые аспекты: от event-driven архитектуры до топиков и партиций, от создания продюсеров и консьюмеров до управления оффсетами и обработки ошибок. Разберем гарантии доставки, а также обсудим, где и как применять Kafka в проектах. Читать далее Всего голосов 4: ↑3 и ↓1 +2 Добавить в закладки47 Комментарии 6 Истории Kilor 24 мар в 09:30 SQL HowTo: оконные функции (Advent of Code 2024, Day 22: Monkey Market) Уровень сложностиПростой Время на прочтение10 мин Количество просмотров 1.7K Блог компании ТензорPostgreSQL*SQL*Алгоритмы*Занимательные задачки Кейс В этой челлендж-серии статей попробуем использовать PostgreSQL как среду для решения задач Advent of Code 2024. Возможно, SQL не самый подходящий для этого язык, зато мы рассмотрим его различные возможности, о которых вы могли и не подозревать. Используем оконные функции, чтобы вычислить "третью производную". Читать далее Всего голосов 8: ↑8 и ↓0 +10 Добавить в закладки23 Комментарии 4 Hemml 24 мар в 09:30 Упрощать сложно. История одного провала Уровень сложностиПростой Время на прочтение13 мин Количество просмотров 7.5K Lisp*Алгоритмы* Я астрофизик, занимаюсь исследованием астрофизических течений в окрестностях двойных звезд и экзопланет. Тема очень обширная и интересная, но сегодня статья будет немного не об этом, и даже не о том, как, собственно, это делается, а об одной маленькой, как мне казалось, проблеме, которая погрузила меня в пучины программирования, хотя изначально цель моя была от программирования избавиться, по возможности, совсем. А именно - о символьной математике и об упрощении алгебраических выражений. В общем, проблема оказалась отнюдь не мала Всего голосов 74: ↑74 и ↓0 +98 Добавить в закладки57 Комментарии 45 malkovsky 23 мар в 17:00 Три теоремы о сортировках Уровень сложностиСредний Время на прочтение12 мин Количество просмотров 11K Python*Алгоритмы*Математика*C++* Обзор Я знаю многих программистов и руководителей в IT компаниях, которые недолюбливают математиков и в частности считают их далёкими от жизни идиотами из-за их утверждений в духе "нельзя отсортировать последовательность быстрее, чем за nlogn" -- ведь это очевидным образом неверно, есть же сортировка подсчетом и radix sort. Нюанс в том, что описанное выше -- это распространённая некорректная трактовка одной из ключевых теорем об алгоритмах сортировок, корректное утверждение выглядит так: "не существует алгоритма, который бы гарантированно находил перестановку n элементов, приводящую к возрастающему порядку, быстрее чем за nlogn используя только операции попарного сравнения". В этом утверждении больше слов, оно более сложно в плане когнитивного восприятия, ключевой момент обозначил жирным шрифтом, чувствуете разницу? В статье хочу рассказать об этой теореме и ещё о двух, на которые я наткнулся когда вел занятия по информатике в 9-11 классах будучи студентом старших курсов. Эти теоремы для меня были удивительным открытием, радовался вне себя когда вывел сам одну из них - её я не встречал ни в одном учебнике по информатике. В последствии все три теоремы были найдены в недрах Кнута, но чёрт побери, их поиск был сложнее, чем вывод! Если я ещё не убедил Вас прочитать статью, то вот моя последняя попытка: в статье объясню почему пузырёк -- это бесполезная фигня, но внезапно практически также работающая сортировка вставками -- это супер важная сортировка, являющаяся частью std::sort в MSVC, GCC и Clang. Расскажу, каким интересным свойством оптимальности обладает сортировка выбором, являющаяся в теории такой же неэффективной как пузырёк. Читать далее Всего голосов 48: ↑48 и ↓0 +60 Добавить в закладки127 Комментарии 59 BRO_Fedka 23 мар в 04:22 Процедурная генерация двухмерной полигональной карты Время на прочтение14 мин Количество просмотров 4.6K Алгоритмы*Программирование*Разработка игр*Python* Привет Хабр ! Это моя первая статья на тему процедурной генерации. Здесь я рассмотрю конкретную задачу по генерации, её решение и опишу ключевые использованные принципы. Пишу эту статью для того, чтобы поделиться идеями и опытом, которых мне не хватало, когда я взялся за дело две недели назад. Я не буду делать полный разбор проекта, а лишь опишу и визуализирую принцип. Читать далее Всего голосов 30: ↑30 и ↓0 +37 Добавить в закладки65 Комментарии 7 nniikon 22 мар в 13:16 Разгон Мандельброта: SIMD с бубнами, OpenMP и CUDA Уровень сложностиСредний Время на прочтение16 мин Количество просмотров 2.9K Assembler*C++*Алгоритмы* Из песочницы Построение множества Мандельброта — классический пример чрезвычайно параллельной задачи (embarrassingly parallel problem). На первом курсе я впервые столкнулся с такой проблемой: тогда мы изучали SIMD-инструкции в курсе архитектур вычислительных систем. Эта тема сразу меня увлекла, и я захотел углубиться в дальнейшие оптимизации, но в течение семестра мне не хватало ни времени, ни знаний. Спустя год я решил восполнить этот пробел. Вначале мы разберем наивную реализацию, поиграемся с интринсиками (intrinsics) и, не теряя переносимости, заставим компилятор генерировать нам SIMD-инструкции. Далее добавим многопоточность и в заключение обесценим все наши старания несколькими строчками на CUDA. Возможно, эта статья поможет таким же, как я, впервые столкнувшимся с подобными задачами. Читать далее Всего голосов 27: ↑27 и ↓0 +34 Добавить в закладки39 Комментарии 47 Pavel_nobranch 22 мар в 06:09 Как передать произвольное количество бит, передав 2 бита Уровень сложностиПростой Время на прочтение2 мин Количество просмотров 11K Алгоритмы*Ненормальное программирование*Сетевые технологии*Сжатие данных* Недавно прочитал статью на Пикабу про бесконечное сжатие, где предлагалось создать словарь 3-х байтовых блоков, и представлять информацию в виде ссылок на эти блоки. Понял что выигрыша в этом нет, но идея передавать не саму информацию, f что-то другое, меня зацепила. Начал размышлять, допустим демон на дне океана перекусывает нитку оптоволокна и смотрит как туда сюда бегут 1 и 0. Какой в них смысл? Одно и тоже. И правда как извлечь смысл из этого однообразия. А здесь вступают в игру фактор времени и договоренности. То есть добавляются дополнительные измерения о которых демон не знает. Стартовые, стоповые биты, длина пакета. Стал думать, хорошо как можно использовать время, договоренность и идею передавать не саму информацию а ссылку на нее. Как передать ссылку на информацию в словаре, не передавая ее индекс. Допустим передать не сами 4 бита информации, а ссылку на эти 4 бита в таблице всех возможных значений 4 бит. Читать далее Всего голосов 25: ↑8 и ↓17 -7 Добавить в закладки23 Комментарии 134 kirillsergeev0102 20 мар в 15:27 Дедупликация объявлений: как мы боремся с одинаковыми размещениями Уровень сложностиСложный Время на прочтение13 мин Количество просмотров 1.6K Блог компании ЦианМашинное обучение*Алгоритмы*Data Engineering*Big Data* Туториал Привет! Меня зовут Кирилл Сергеев, я ML-инженер в Циане. В этой статье я расскажу, как мы решили задачу дедупликации объявлений о недвижимости, разработав систему на основе трёх моделей. Эта система автоматически находит и объединяет дублирующиеся объявления, помогая пользователям видеть только актуальную и уникальную информацию. Материал будет полезен ML-инженерам и специалистам по обработке данных, которым интересно, как мы подошли к решению этой задачи: какие методы использовали, какие проблемы возникли и как мы их преодолели. Читать далее Всего голосов 10: ↑10 и ↓0 +12 Добавить в закладки27 Комментарии 5 YuriPanchul 20 мар в 11:36 Армения посреди Америки, Китая и России: отчет с EDA Connect 2025 Уровень сложностиПростой Время на прочтение8 мин Количество просмотров 1.4K FPGA*Алгоритмы*Электроника для начинающихПрограммирование микроконтроллеров*Хакатоны Репортаж Мысль, что Армения удобна тем, что соединяется и с Америкой, и с Китаем - высказал мне один из китайских участников конференции EDA Connect. А мысль, что Армения соединяется еще и с Россией - возникала естественно при просмотре докладов о логическом синтезаторе, статическом анализаторе и верификации с помощью UVM. Помимо докладов, при конференции прошел хакатон по Verilog и FPGA, на который пришли студенты из Ереванского университета, русско-армянского университета, американо-армянского, французско-армянского, европейско-армянского, и других университетов. Занятно, что второй день хакатона проходил в комнате напротив зала, где большое начальство встречалось с Премьер-Министром Армении. Один из студентов хакатона перепутал дверь, и его перенаправила секьюрити. Читать далее Всего голосов 8: ↑5 и ↓3 +5 Добавить в закладки6 Комментарии 11 ru_vds 19 мар в 16:01 Сортировка слиянием на CUDA Уровень сложностиСредний Время на прочтение9 мин Количество просмотров 4.6K Блог компании RUVDS.comC++*Алгоритмы*ВидеокартыПрограммирование* Обзор Перевод Я решил изучить, как повысится производительность алгоритмов сортировки при их реализации на CUDA. Моя цель — понять, как можно использовать мощь параллельных вычислений для ускорения алгоритмов сортировки. В качестве тестового я возьму алгоритм сортировки слиянием (merge sort), потому что он удобно разбивает задачу на меньшие подзадачи с двумя равными половинами, что хорошо подходит для параллельных вычислений. Читать дальше → Всего голосов 37: ↑37 и ↓0 +61 Добавить в закладки38 Комментарии 2 Ближайшие события 31 марта Серия вебинаров «DevOps Middle: AvitoTech vs ecom.tech» Онлайн Больше событий в календаре Разработка Администрирование 3 апреля Реалити для разработчиков: узнайте, как строится новое публичное облако MWS Онлайн Больше событий в календаре Разработка 3 апреля Открытая встреча «System Analysis Meetup SberHealth» Москва • Онлайн Больше событий в календаре Аналитика 4 – 5 апреля Геймтон «DatsCity» Онлайн Больше событий в календаре Разработка 8 апреля Конференция TEAMLY WORK MANAGEMENT 2025 Москва • Онлайн Больше событий в календаре Менеджмент Другое 10 апреля «GoCloud 2025» — масштабная IT-конференция про облака и AI Москва • Онлайн Больше событий в календаре Разработка Администрирование Менеджмент 15 – 16 апреля Форум «Российская неделя ЦОД»: конференции «В Облаке.РФ» и TechDay Москва • Онлайн Больше событий в календаре Разработка Менеджмент Другое 17 – 19 апреля Курс: «Клиентские данные в энтерпрайзе» Москва Больше событий в календаре Аналитика Тестирование Другое 25 – 26 апреля IT-конференция Merge Tatarstan 2025 Казань Больше событий в календаре Разработка Маркетинг Другое 25 апреля Кейс-конференция «Клиника на миллиард: лидеры делятся опытом построения клиник» Москва • Онлайн Больше событий в календаре Менеджмент Другое 20 – 22 июня Летняя айти-тусовка Summer Merge Ульяновская область Больше событий в календаре Разработка Другое Влево Вправо welcome2hype 19 мар в 09:00 А не пора ли нам подкрепиться? Уровень сложностиСредний Время на прочтение10 мин Количество просмотров 1.5K Data Mining*R*Математика*Алгоритмы* Обучение с подкреплением – это одна из ключевых концепций ИИ. Пришло время подкрепить коммивояжера и его задачу поиска кратчайшего пути Q-обучением. Табличный вариант Q-обучения является сравнительно простой и эффективной реализацией обучения с подкреплением. Читать далее Всего голосов 3: ↑3 и ↓0 +4 Добавить в закладки8 Комментарии 0 kudoff 18 мар в 09:15 Камеры трясутся, шум зашкаливает, а сравнивать нужно: как справляются алгоритмы? Уровень сложностиПростой Время на прочтение4 мин Количество просмотров 9.2K Алгоритмы*Машинное обучение*Обработка изображений*ЗвукРабота с видео* Из песочницы Каждый день миллионы изображений, видео и аудиофайлов загружаются в интернет. Мы смотрим фильмы, слушаем музыку, листаем соцсети, даже не задумываясь о том, какие алгоритмы стоят за тем, чтобы контент отображался корректно и не повторялся. Но что, если вам нужно сравнивать медиаконтент автоматически? Как понять, одинаковые ли две фотографии, если одна немного темнее? Как сравнить два видео, если они сняты под разными углами? А что делать, если вам нужно найти дубликат аудиофайла, но на одной записи есть шум? Если эти вопросы вам интересны – добро пожаловать в мир сравнения медиаконтента! Сегодня мы разберем, какие бывают методы, их плюсы и минусы, а главное – расскажем о наших экспериментах, где мы проверили, какие алгоритмы лучше справляются с реальными проблемами. Читать далее Всего голосов 8: ↑8 и ↓0 +10 Добавить в закладки33 Комментарии 2 Vital18 18 мар в 03:57 Программный код в Big data и Power law Уровень сложностиСредний Время на прочтение6 мин Количество просмотров 804 Big Data*Data Mining*Python*Алгоритмы*Криптография* Аналитика В статье приводятся оригинальные модули Python и даётся пояснение по их применению в задачах распределённой децентрализованной сети по типу блокчейн или, другими словами, в процессах самоорганизованной критичности (SOC). В научных публикациях чаще встречается физический термин SOC в качестве концепции, включающей процессы турбулентности, детонации, землетрясения, нейросети, фондовая волатильность, социальный рейтинг и другие. Для процессов SOC характерно отсутствие управляющих параметров и масштабная инвариантность. Универсальность сложных процессов SOC со степенным законом Power law имеет тот же характер, как и универсальность простых линейных систем, не обладающих масштабной инвариантностью, по отношению к закону нормального распределения вероятности. Зависимость от масштаба возникает при аналого-цифровом преобразовании битов в позиционную систему счисления и проявляется в законе нормального распределения вероятности в виде дисперсии и математического ожидания. Потеря масштабной инвариантности в позиционной системе счисления компенсируется приобретением принципа причинности. Например, в Древнем Риме, где была принята непозиционная система счисления, вычисляли, что «после того - не вследствие того» и сильно удивились бы истории с падающим на Ньютона яблоком. Значительные достижения в анализе Big data заставляют предположить связь с распределением вероятности Пуассона: чем больше данных, тем чаще должны встречаться пуассоновские события и вопрос лишь в поиске подходящей метрики и системы счисления. Читать далее Всего голосов 1: ↑0 и ↓1 -1 Добавить в закладки7 Комментарии 7 Kilor 17 мар в 14:55 SQL HowTo: моделирование против подсчета (Advent of Code 2024, Day 21: Keypad Conundrum) Уровень сложностиСредний Время на прочтение17 мин Количество просмотров 589 Блог компании ТензорPostgreSQL*SQL*Алгоритмы*Занимательные задачки Кейс В этой челлендж-серии статей попробуем использовать PostgreSQL как среду для решения задач Advent of Code 2024. Возможно, SQL не самый подходящий для этого язык, зато мы рассмотрим его различные возможности, о которых вы могли и не подозревать. Пробуем смоделировать преобразования строк "в лоб", а потом - организовать подсчет и решить более сложную задачу в разы быстрее простой! Читать далее Всего голосов 7: ↑7 и ↓0 +9 Добавить в закладки11 Комментарии 0 KukarekusUltra 16 мар в 09:24 Быстрая свёртка множеств (алгоритм) Уровень сложностиСредний Время на прочтение4 мин Количество просмотров 5.8K Алгоритмы*Спортивное программирование*Математика*C++* Туториал Перевод Свертка подмножеств, это математический аппарат, который позволяет ускорить алгоритмы на множествах и быстро считать функции на подмножествах. Статья будет интересна тем, кто интересуется нетривиальными, но красивыми алгоритмами! Читать далее Всего голосов 10: ↑10 и ↓0 +14 Добавить в закладки64 Комментарии 7 Kirill_Dan 12 мар в 17:11 Обновление SPA приложения в браузере пользователя Node/React Время на прочтение13 мин Количество просмотров 1.8K JavaScript*Node.JS*ReactJS*Алгоритмы*Веб-разработка* Туториал Всем привет. Мне читатели иногда присылают сообщения с одним и тем же вопросом, что ты же Software Engineer и Solution Architect, но почти все твои статьи касаются бизнеса, менеджмента, процессов, управления командами и так далее. Но нет статей технического характера, про разработку и создание разных фич (feature) для проекта. Причина по которой это происходит в том, что весь интернет забит информацией о том, как программировать, но очень мало информации о том, что именно программировать, и о том, что за пределами кодинга огромное количество нерешенных проблем, которые нивелируют весь процесс программирования. Но сегодня я расскажу об одной фиче, которая может оказаться очень полезной для многих. Читать далее Всего голосов 4: ↑2 и ↓2 0 Добавить в закладки12 Комментарии 26 ru_vds 12 мар в 16:01 Компактные структуры данных Уровень сложностиСредний Время на прочтение10 мин Количество просмотров 12K Блог компании RUVDS.comRust*Алгоритмы*Программирование*Хранение данных* Обзор Перевод Введение Несколько месяцев назад в поисках идей по ускорению кода я изучал множество научных статей по computer science. Не буду притворяться, что хорошо их понимал, но меня не пугает непонятное, и я готов признать своё невежество1. Я обнаружил статью, написанную пятнадцать лет назад2, в которой было множество новых для меня концепций. Мне никак не удавалось в них разобраться. Что же делать дальше? Можно искать другие статьи, чтобы они заполнили мои пробелы. Это рискованное предприятие, потому что они могут запутать ещё больше, но избежать этого нельзя. Я нашёл статью с нужной структурой данных, в которой упоминался исходный код с веб-сайта. Код был написан на C++, а я работаю на Rust, но решил, что всё равно стоит на него взглянуть. Однако зайдя на сайт, я не обнаружил там ресурс, поэтому я написал владельцу веб-сайта, который оказался преподавателем computer science. Этот преподаватель (Гонсало Наварро) очень тепло меня принял и сразу же ответил мне3 4. И только в процессе общения с ним я осознал, что видел его фамилию на множестве статей в этой области. Оказалось, я познакомился с одним из специалистов мирового уровня в области компактных структур данных (succinct data structure). Невежество может завести очень далеко. Что же такое компактные структуры данных? Если вы изучали в последние десятилетия computer science, то могли сталкиваться с ними, но мне не доводилось встречаться с ними в процессе работы программистом, а если и доводилось, то я сразу же о них забыл. Но я считаю, что эти структуры данных обладают потрясающими свойствами. Все мы пользуемся массивами и хэш-таблицами5, популярны также различные деревья. Нам не нужно полностью понимать их устройство, чтобы эффективно пользоваться их свойствами. А теперь я задаюсь вопросом, почему же люди не используют компактные структуры данных чаще. Я решил, что стоит немного о них рассказать. Читать дальше → Всего голосов 57: ↑53 и ↓4 +76 Добавить в закладки130 Комментарии 16 Назад Сюда 1 23 ... 300301Туда Назад Ваш аккаунт Войти Регистрация Разделы Статьи Новости Хабы Компании Авторы Песочница Информация Устройство сайта Для авторов Для компаний Документы Соглашение Конфиденциальность Услуги Корпоративный блог Медийная реклама Нативные проекты Образовательные программы Стартапам Facebook Twitter VK Telegram Youtube Яндекс Дзен Настройка языкаТехническая поддержка © 2006–2025, Habr